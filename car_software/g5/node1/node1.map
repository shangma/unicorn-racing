Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
                              sdcard_fs_driver/ff.o (__mulsi3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodqi4.o)
                              sdcard_fs_driver/rtc.o (__udivmodqi4)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
                              sdcard_fs_driver/rtc.o (__udivmodhi4)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
                              sdcard_fs_driver/ff.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
                              main.o (__prologue_saves__)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
                              main.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o (exit)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
                              sdcard_fs_driver/mmc.o (__tablejump2__)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o)
                              uart.o (__subsf3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mul_sf.o)
                              uart.o (__mulsf3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_div_sf.o)
                              uart.o (__divsf3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_sf_to_si.o)
                              uart.o (__fixsfsi)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
                              log.o (atoi)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
                              main.o (itoa)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o) (__mulhi_const_10)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

Fatfs               0x232             main.o
tx_remote_buffer    0x8               can_func.o
Finfo               0x16              main.o
response_buffer     0x10              can_func.o
acc_dirs            0x2               main.o
acc_files           0x2               main.o
Timer               0x2               main.o
EcuData             0xe4              main.o
Buff                0x400             main.o
tx_remote_msg       0xd               can_func.o
acc_size            0x4               main.o
databuffer          0x10              can_func.o
response_msg        0x1a              can_func.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
LOAD main.o
LOAD uart.o
LOAD sdcard_fs_driver/ff.o
LOAD sdcard_fs_driver/mmc.o
LOAD sdcard_fs_driver/rtc.o
LOAD can_std/can_drv.o
LOAD can_std/can_lib.o
LOAD can_func.o
LOAD isr.o
LOAD error.o
LOAD comm.o
LOAD twi/twi.o
LOAD log.o
LOAD xitoa.o
LOAD /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x5c48
 *(.vectors)
 .vectors       0x00000000       0x94 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000094       0x1e sdcard_fs_driver/mmc.o
 .progmem.gcc_sw_table
                0x000000b2       0x16 can_std/can_lib.o
 *(.progmem*)
 .progmem.data  0x000000c8       0xee main.o
                0x000001b6                . = ALIGN (0x2)
                0x000001b6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000001b6        0x0 linker stubs
 *(.trampolines*)
                0x000001b6                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000001b6                __ctors_start = .
 *(.ctors)
                0x000001b6                __ctors_end = .
                0x000001b6                __dtors_start = .
 *(.dtors)
                0x000001b6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000001b6        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
                0x000001b6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000001b6        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000001c2       0x1a /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
                0x000001c2                __do_copy_data
 .init4         0x000001dc       0x10 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
                0x000001dc                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000001ec        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x000001f4        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
                0x000001f4                __vector_22
                0x000001f4                __vector_28
                0x000001f4                __vector_1
                0x000001f4                __vector_32
                0x000001f4                __vector_34
                0x000001f4                __vector_24
                0x000001f4                __vector_12
                0x000001f4                __bad_interrupt
                0x000001f4                __vector_6
                0x000001f4                __vector_31
                0x000001f4                __vector_35
                0x000001f4                __vector_3
                0x000001f4                __vector_23
                0x000001f4                __vector_30
                0x000001f4                __vector_25
                0x000001f4                __vector_11
                0x000001f4                __vector_13
                0x000001f4                __vector_17
                0x000001f4                __vector_19
                0x000001f4                __vector_7
                0x000001f4                __vector_27
                0x000001f4                __vector_5
                0x000001f4                __vector_33
                0x000001f4                __vector_4
                0x000001f4                __vector_2
                0x000001f4                __vector_15
                0x000001f4                __vector_36
                0x000001f4                __vector_29
                0x000001f4                __vector_8
                0x000001f4                __vector_26
                0x000001f4                __vector_14
                0x000001f4                __vector_10
                0x000001f4                __vector_18
                0x000001f4                __vector_20
 .text          0x000001f8      0x582 main.o
                0x000001f8                can
                0x00000314                get_fattime
                0x000003d0                main
                0x00000718                __vector_9
 .text          0x0000077a      0x1c0 uart.o
                0x0000077a                USART0_Transmit
                0x0000078a                USART1_Transmit
                0x0000079a                USART_set_baud_rate
                0x00000888                uart_init
                0x000008b4                uart_get
                0x000008c2                uart_put_test
                0x000008e6                uart_put
                0x000008f6                uart_puts
                0x00000910                uart1_put
                0x00000920                uart1_puts
 .text          0x0000093a     0x25d2 sdcard_fs_driver/ff.o
                0x0000093a                clust2sect
                0x000009b0                f_mount
                0x000009e0                f_chdrive
                0x00000afe                put_fat
                0x00000c92                get_fat
                0x00001182                f_lseek
                0x0000181e                f_readdir
                0x00001cb0                f_write
                0x00002102                f_read
                0x000024d4                f_sync
                0x0000264a                f_close
                0x00002666                chk_mounted
                0x000029da                f_opendir
                0x00002a8e                f_chdir
                0x00002b3a                f_open
 .text          0x00002f0c      0x8ca sdcard_fs_driver/mmc.o
                0x00003142                disk_initialize
                0x000032c8                disk_status
                0x000032d6                disk_read
                0x00003392                disk_write
                0x00003480                disk_ioctl
                0x000037b8                disk_timerproc
 .text          0x000037d6      0x366 sdcard_fs_driver/rtc.o
                0x000037d6                RTC_read
                0x0000388c                rtc_gettime
                0x0000398c                RTC_write
                0x00003a04                rtc_settime
                0x00003b0a                rtc_clearHaltBit
                0x00003b32                rtc_init
 .text          0x00003b3c      0x39a can_std/can_drv.o
                0x00003b3c                can_clear_all_mob
                0x00003b5c                can_get_mob_free
                0x00003b8a                can_get_mob_status
                0x00003bb0                can_get_data
                0x00003bd8                can_auto_baudrate
                0x00003ebc                can_fixed_baudrate
 .text          0x00003ed6      0xb46 can_std/can_lib.o
                0x00003ed6                can_get_status
                0x00003ffc                can_cmd
                0x00004a02                can_init
 .text          0x00004a1c       0xfe can_func.o
                0x00004a1c                init_can_data_mobs
                0x00004a60                can_update_rx_msg
                0x00004a88                can_data_mob_setup
                0x00004ada                can_send
 .text          0x00004b1a      0x128 isr.o
                0x00004b1a                __vector_21
                0x00004b70                __vector_16
 .text          0x00004c42        0x0 error.o
 .text          0x00004c42      0x150 comm.o
                0x00004c42                send_status
 .text          0x00004d92       0x82 twi/twi.o
                0x00004d92                TWI_init
                0x00004da4                TWI_start
                0x00004ddc                TWI_send
                0x00004df0                TWI_rcvr
                0x00004e0c                TWI_stop
 .text          0x00004e14       0x50 log.o
                0x00004e14                get_free_log_number
 .text          0x00004e64      0x214 xitoa.o
                0x00004e64                xputc
                0x00004e82                xputs
                0x00004e90                xitoa
                0x00004f06                xprintf
                0x00004fc2                xatoi
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodqi4.o)
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
 .text          0x00005078        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .text          0x00005078      0x354 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o)
                0x00005310                __subsf3
                0x00005372                __addsf3
 .text          0x000053cc      0x1f4 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mul_sf.o)
                0x000053cc                __mulsf3
 .text          0x000055c0      0x158 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_div_sf.o)
                0x000055c0                __divsf3
 .text          0x00005718       0xa8 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_sf_to_si.o)
                0x00005718                __fixsfsi
 .text          0x000057c0        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_thenan_sf.o)
 .text          0x000057c0      0x1aa /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_pack_sf.o)
                0x000057c0                __pack_f
 .text          0x0000596a       0xf0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_unpack_sf.o)
                0x0000596a                __unpack_f
 .text          0x00005a5a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
 .text          0x00005a5a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
 .text          0x00005a5a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
 .text          0x00005a5a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
                0x00005a5a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00005a5a       0x3e /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
                0x00005a5a                __mulsi3
 .text.libgcc   0x00005a98       0x18 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodqi4.o)
                0x00005a98                __udivmodqi4
 .text.libgcc   0x00005ab0       0x28 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
                0x00005ab0                __udivmodhi4
 .text.libgcc   0x00005ad8       0x44 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
                0x00005ad8                __udivmodsi4
 .text.libgcc   0x00005b1c       0x38 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
                0x00005b1c                __prologue_saves__
 .text.libgcc   0x00005b54       0x36 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
                0x00005b54                __epilogue_restores__
 .text.libgcc   0x00005b8a        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00005b8a        0xc /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
                0x00005b8a                __tablejump2__
                0x00005b8e                __tablejump__
 .text.libgcc   0x00005b96        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00005b96       0x3c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
                0x00005b96                atoi
 .text.avr-libc
                0x00005bd2       0x42 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
                0x00005bd2                itoa
 .text.avr-libc
                0x00005c14       0x10 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
                0x00005c14                __mulhi_const_10
 .text.avr-libc
                0x00005c24       0x20 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
                0x00005c24                strrev
                0x00005c44                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00005c44        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
                0x00005c44                exit
                0x00005c44                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00005c44        0x4 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00005c48                _etext = .

.data           0x00800100       0x22 load address 0x00005c48
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 .data          0x00800100        0x3 main.o
 .data          0x00800103        0x0 uart.o
 .data          0x00800103        0xb sdcard_fs_driver/ff.o
 .data          0x0080010e        0x1 sdcard_fs_driver/mmc.o
 .data          0x0080010f        0x0 sdcard_fs_driver/rtc.o
 .data          0x0080010f        0x0 can_std/can_drv.o
 .data          0x0080010f        0x0 can_std/can_lib.o
 .data          0x0080010f        0x0 can_func.o
 .data          0x0080010f        0xa isr.o
 .data          0x00800119        0x0 error.o
 .data          0x00800119        0x0 comm.o
 .data          0x00800119        0x0 twi/twi.o
 .data          0x00800119        0x0 log.o
 .data          0x00800119        0x0 xitoa.o
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodqi4.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mul_sf.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_div_sf.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_sf_to_si.o)
 .data          0x00800119        0x8 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_thenan_sf.o)
                0x00800119                __thenan_sf
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_pack_sf.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_unpack_sf.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800122                . = ALIGN (0x2)
 *fill*         0x00800121        0x1 00
                0x00800122                _edata = .
                0x00800122                PROVIDE (__data_end, .)

.bss            0x00800122      0x796
                0x00800122                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800122        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 .bss           0x00800122        0x0 main.o
 .bss           0x00800122        0x0 uart.o
 .bss           0x00800122        0x5 sdcard_fs_driver/ff.o
 .bss           0x00800127        0x3 sdcard_fs_driver/mmc.o
 .bss           0x0080012a        0x0 sdcard_fs_driver/rtc.o
 .bss           0x0080012a        0x0 can_std/can_drv.o
 .bss           0x0080012a        0x0 can_std/can_lib.o
 .bss           0x0080012a        0x1 can_func.o
                0x0080012a                bufferindex
 .bss           0x0080012b        0x4 isr.o
                0x0080012b                RecIndex
                0x0080012d                testvar
 .bss           0x0080012f        0x2 error.o
                0x0080012f                EcuCommError
                0x00800130                EcuErrorTmp
 .bss           0x00800131        0x0 comm.o
 .bss           0x00800131        0x0 twi/twi.o
 .bss           0x00800131        0x0 log.o
 .bss           0x00800131        0x2 xitoa.o
                0x00800131                xfunc_out
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodqi4.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mul_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_div_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_sf_to_si.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_thenan_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_pack_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_unpack_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800133      0x736 main.o
                0x00800133                Fatfs
                0x00800365                Finfo
                0x0080037b                acc_dirs
                0x0080037d                acc_files
                0x0080037f                Timer
                0x00800381                EcuData
                0x00800465                Buff
                0x00800865                acc_size
 COMMON         0x00800869       0x4f can_func.o
                0x00800869                tx_remote_buffer
                0x00800871                response_buffer
                0x00800881                tx_remote_msg
                0x0080088e                databuffer
                0x0080089e                response_msg
                0x008008b8                PROVIDE (__bss_end, .)
                0x00005c48                __data_load_start = LOADADDR (.data)
                0x00005c6a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008008b8        0x0
                0x008008b8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008008b8                PROVIDE (__noinit_end, .)
                0x008008b8                _end = .
                0x008008b8                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x18c0
 *(.stab)
 .stab          0x00000000      0x750 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 .stab          0x00000750      0xcfc xitoa.o
                                0xd08 (size before relaxing)
 .stab          0x0000144c      0x174 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
                                0x180 (size before relaxing)
 .stab          0x000015c0      0x1b0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x00001770       0x78 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
                                 0x84 (size before relaxing)
 .stab          0x000017e8       0xd8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000      0x152
 *(.stabstr)
 .stabstr       0x00000000      0x152 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x180
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 uart.o
 .debug_aranges
                0x00000040       0x20 sdcard_fs_driver/ff.o
 .debug_aranges
                0x00000060       0x20 sdcard_fs_driver/mmc.o
 .debug_aranges
                0x00000080       0x20 sdcard_fs_driver/rtc.o
 .debug_aranges
                0x000000a0       0x20 can_std/can_drv.o
 .debug_aranges
                0x000000c0       0x20 can_std/can_lib.o
 .debug_aranges
                0x000000e0       0x20 can_func.o
 .debug_aranges
                0x00000100       0x20 isr.o
 .debug_aranges
                0x00000120       0x20 comm.o
 .debug_aranges
                0x00000140       0x20 twi/twi.o
 .debug_aranges
                0x00000160       0x20 log.o

.debug_pubnames
                0x00000000      0x5e6
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x9d main.o
 .debug_pubnames
                0x0000009d       0xb7 uart.o
 .debug_pubnames
                0x00000154       0xd0 sdcard_fs_driver/ff.o
 .debug_pubnames
                0x00000224       0x75 sdcard_fs_driver/mmc.o
 .debug_pubnames
                0x00000299       0x6f sdcard_fs_driver/rtc.o
 .debug_pubnames
                0x00000308       0x92 can_std/can_drv.o
 .debug_pubnames
                0x0000039a       0x3e can_std/can_lib.o
 .debug_pubnames
                0x000003d8       0xce can_func.o
 .debug_pubnames
                0x000004a6       0x57 isr.o
 .debug_pubnames
                0x000004fd       0x33 error.o
 .debug_pubnames
                0x00000530       0x2e comm.o
 .debug_pubnames
                0x0000055e       0x54 twi/twi.o
 .debug_pubnames
                0x000005b2       0x34 log.o

.debug_info     0x00000000     0x434c
 *(.debug_info)
 .debug_info    0x00000000      0xcb4 main.o
 .debug_info    0x00000cb4      0x2dd uart.o
 .debug_info    0x00000f91     0x174a sdcard_fs_driver/ff.o
 .debug_info    0x000026db      0x715 sdcard_fs_driver/mmc.o
 .debug_info    0x00002df0      0x30e sdcard_fs_driver/rtc.o
 .debug_info    0x000030fe      0x325 can_std/can_drv.o
 .debug_info    0x00003423      0x2e1 can_std/can_lib.o
 .debug_info    0x00003704      0x384 can_func.o
 .debug_info    0x00003a88      0x1bb isr.o
 .debug_info    0x00003c43       0x9d error.o
 .debug_info    0x00003ce0      0x162 comm.o
 .debug_info    0x00003e42      0x12e twi/twi.o
 .debug_info    0x00003f70      0x3dc log.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000     0x1238
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x2b2 main.o
 .debug_abbrev  0x000002b2      0x161 uart.o
 .debug_abbrev  0x00000413      0x2f5 sdcard_fs_driver/ff.o
 .debug_abbrev  0x00000708      0x217 sdcard_fs_driver/mmc.o
 .debug_abbrev  0x0000091f      0x136 sdcard_fs_driver/rtc.o
 .debug_abbrev  0x00000a55      0x101 can_std/can_drv.o
 .debug_abbrev  0x00000b56      0x13f can_std/can_lib.o
 .debug_abbrev  0x00000c95      0x13e can_func.o
 .debug_abbrev  0x00000dd3      0x129 isr.o
 .debug_abbrev  0x00000efc       0x51 error.o
 .debug_abbrev  0x00000f4d       0xf6 comm.o
 .debug_abbrev  0x00001043       0xd0 twi/twi.o
 .debug_abbrev  0x00001113      0x125 log.o

.debug_line     0x00000000     0x339c
 *(.debug_line)
 .debug_line    0x00000000      0x3cb main.o
 .debug_line    0x000003cb      0x23b uart.o
 .debug_line    0x00000606     0x14cf sdcard_fs_driver/ff.o
 .debug_line    0x00001ad5      0x834 sdcard_fs_driver/mmc.o
 .debug_line    0x00002309      0x2ab sdcard_fs_driver/rtc.o
 .debug_line    0x000025b4      0x325 can_std/can_drv.o
 .debug_line    0x000028d9      0x3c8 can_std/can_lib.o
 .debug_line    0x00002ca1      0x181 can_func.o
 .debug_line    0x00002e22      0x143 isr.o
 .debug_line    0x00002f65       0x57 error.o
 .debug_line    0x00002fbc      0x1c2 comm.o
 .debug_line    0x0000317e      0x162 twi/twi.o
 .debug_line    0x000032e0       0xbc log.o

.debug_frame    0x00000000      0x570
 *(.debug_frame)
 .debug_frame   0x00000000       0x50 main.o
 .debug_frame   0x00000050       0xb0 uart.o
 .debug_frame   0x00000100      0x170 sdcard_fs_driver/ff.o
 .debug_frame   0x00000270       0xc0 sdcard_fs_driver/mmc.o
 .debug_frame   0x00000330       0x70 sdcard_fs_driver/rtc.o
 .debug_frame   0x000003a0       0x70 can_std/can_drv.o
 .debug_frame   0x00000410       0x40 can_std/can_lib.o
 .debug_frame   0x00000450       0x50 can_func.o
 .debug_frame   0x000004a0       0x30 isr.o
 .debug_frame   0x000004d0       0x20 comm.o
 .debug_frame   0x000004f0       0x60 twi/twi.o
 .debug_frame   0x00000550       0x20 log.o

.debug_str      0x00000000      0xc3f
 *(.debug_str)
 .debug_str     0x00000000      0x44a main.o
                                0x4d3 (size before relaxing)
 .debug_str     0x0000044a       0xb8 uart.o
                                0x19a (size before relaxing)
 .debug_str     0x00000502      0x2d6 sdcard_fs_driver/ff.o
                                0x4f4 (size before relaxing)
 .debug_str     0x000007d8       0xf2 sdcard_fs_driver/mmc.o
                                0x242 (size before relaxing)
 .debug_str     0x000008ca       0x5c sdcard_fs_driver/rtc.o
                                0x187 (size before relaxing)
 .debug_str     0x00000926      0x18b can_std/can_drv.o
                                0x269 (size before relaxing)
 .debug_str     0x00000ab1       0x57 can_std/can_lib.o
                                0x21c (size before relaxing)
 .debug_str     0x00000b08       0x7a can_func.o
                                0x269 (size before relaxing)
 .debug_str     0x00000b82       0x48 isr.o
                                0x17d (size before relaxing)
 .debug_str     0x00000bca        0x8 error.o
                                 0xef (size before relaxing)
 .debug_str     0x00000bd2       0x13 comm.o
                                0x155 (size before relaxing)
 .debug_str     0x00000be5       0x38 twi/twi.o
                                0x123 (size before relaxing)
 .debug_str     0x00000c1d       0x22 log.o
                                0x2ac (size before relaxing)

.debug_loc      0x00000000     0x3ae1
 *(.debug_loc)
 .debug_loc     0x00000000       0xa0 main.o
 .debug_loc     0x000000a0      0x16c uart.o
 .debug_loc     0x0000020c     0x2902 sdcard_fs_driver/ff.o
 .debug_loc     0x00002b0e      0x5a7 sdcard_fs_driver/mmc.o
 .debug_loc     0x000030b5      0x1ed sdcard_fs_driver/rtc.o
 .debug_loc     0x000032a2      0x3f7 can_std/can_drv.o
 .debug_loc     0x00003699      0x315 can_std/can_lib.o
 .debug_loc     0x000039ae       0xb8 can_func.o
 .debug_loc     0x00003a66       0x3b twi/twi.o
 .debug_loc     0x00003aa1       0x40 log.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(node1.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x150
 .debug_ranges  0x00000000       0x30 uart.o
 .debug_ranges  0x00000030       0xf0 sdcard_fs_driver/ff.o
 .debug_ranges  0x00000120       0x30 sdcard_fs_driver/mmc.o
