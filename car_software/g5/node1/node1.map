Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
                              sdcard_fs_driver/ff.o (__mulsi3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
                              sdcard_fs_driver/ff.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
                              main.o (__prologue_saves__)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
                              main.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o (exit)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
                              sdcard_fs_driver/mmc.o (__tablejump2__)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o)
                              uart.o (__subsf3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mul_sf.o)
                              uart.o (__mulsf3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_div_sf.o)
                              uart.o (__divsf3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_sf_to_si.o)
                              uart.o (__fixsfsi)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
                              log.o (atoi)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
                              main.o (itoa)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o) (__mulhi_const_10)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

Fatfs               0x232             main.o
tx_remote_buffer    0x8               can_func.o
Finfo               0x16              main.o
response_buffer     0x10              can_func.o
acc_dirs            0x2               main.o
acc_files           0x2               main.o
Timer               0x2               main.o
EcuData             0xe4              main.o
Buff                0x400             main.o
tx_remote_msg       0xd               can_func.o
acc_size            0x4               main.o
databuffer          0x10              can_func.o
response_msg        0x1a              can_func.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
LOAD main.o
LOAD uart.o
LOAD sdcard_fs_driver/ff.o
LOAD sdcard_fs_driver/mmc.o
LOAD sdcard_fs_driver/rtc.o
LOAD can_std/can_drv.o
LOAD can_std/can_lib.o
LOAD can_func.o
LOAD isr.o
LOAD error.o
LOAD comm.o
LOAD log.o
LOAD xitoa.o
LOAD /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x5b6e
 *(.vectors)
 .vectors       0x00000000       0x94 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000094       0x1e sdcard_fs_driver/mmc.o
 .progmem.gcc_sw_table
                0x000000b2       0x16 can_std/can_lib.o
 *(.progmem*)
 .progmem.data  0x000000c8      0x127 main.o
                0x000001f0                . = ALIGN (0x2)
 *fill*         0x000001ef        0x1 00
                0x000001f0                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000001f0        0x0 linker stubs
 *(.trampolines*)
                0x000001f0                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000001f0                __ctors_start = .
 *(.ctors)
                0x000001f0                __ctors_end = .
                0x000001f0                __dtors_start = .
 *(.dtors)
                0x000001f0                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000001f0        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
                0x000001f0                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000001f0        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000001fc       0x1a /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
                0x000001fc                __do_copy_data
 .init4         0x00000216       0x10 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
                0x00000216                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000226        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x0000022e        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
                0x0000022e                __vector_22
                0x0000022e                __vector_28
                0x0000022e                __vector_1
                0x0000022e                __vector_32
                0x0000022e                __vector_34
                0x0000022e                __vector_24
                0x0000022e                __vector_12
                0x0000022e                __bad_interrupt
                0x0000022e                __vector_6
                0x0000022e                __vector_31
                0x0000022e                __vector_35
                0x0000022e                __vector_3
                0x0000022e                __vector_23
                0x0000022e                __vector_30
                0x0000022e                __vector_25
                0x0000022e                __vector_11
                0x0000022e                __vector_13
                0x0000022e                __vector_17
                0x0000022e                __vector_19
                0x0000022e                __vector_7
                0x0000022e                __vector_27
                0x0000022e                __vector_5
                0x0000022e                __vector_33
                0x0000022e                __vector_4
                0x0000022e                __vector_2
                0x0000022e                __vector_15
                0x0000022e                __vector_36
                0x0000022e                __vector_29
                0x0000022e                __vector_8
                0x0000022e                __vector_26
                0x0000022e                __vector_14
                0x0000022e                __vector_10
                0x0000022e                __vector_18
                0x0000022e                __vector_20
 .text          0x00000232      0x866 main.o
                0x00000232                TWI_init
                0x00000244                TWI_start
                0x0000027c                TWI_send
                0x00000290                TWI_rcvr
                0x000002ac                TWI_stop
                0x000002b4                TWI_write
                0x00000354                TWI_read
                0x00000446                rtc_gettimeNew
                0x00000546                can
                0x00000662                main
                0x0000097a                get_fattime
                0x00000a36                __vector_9
 .text          0x00000a98      0x1c0 uart.o
                0x00000a98                USART0_Transmit
                0x00000aa8                USART1_Transmit
                0x00000ab8                USART_set_baud_rate
                0x00000ba6                uart_init
                0x00000bd2                uart_get
                0x00000be0                uart_put_test
                0x00000c04                uart_put
                0x00000c14                uart_puts
                0x00000c2e                uart1_put
                0x00000c3e                uart1_puts
 .text          0x00000c58     0x25d2 sdcard_fs_driver/ff.o
                0x00000c58                clust2sect
                0x00000cce                f_mount
                0x00000cfe                f_chdrive
                0x00000e1c                put_fat
                0x00000fb0                get_fat
                0x000014a0                f_lseek
                0x00001b3c                f_readdir
                0x00001fce                f_write
                0x00002420                f_read
                0x000027f2                f_sync
                0x00002968                f_close
                0x00002984                chk_mounted
                0x00002cf8                f_opendir
                0x00002dac                f_chdir
                0x00002e58                f_open
 .text          0x0000322a      0x8ca sdcard_fs_driver/mmc.o
                0x00003460                disk_initialize
                0x000035e6                disk_status
                0x000035f4                disk_read
                0x000036b0                disk_write
                0x0000379e                disk_ioctl
                0x00003ad6                disk_timerproc
 .text          0x00003af4       0x30 sdcard_fs_driver/rtc.o
                0x00003af4                rtc_gettime
                0x00003b18                rtc_settime
                0x00003b1e                rtc_init
 .text          0x00003b24      0x39a can_std/can_drv.o
                0x00003b24                can_clear_all_mob
                0x00003b44                can_get_mob_free
                0x00003b72                can_get_mob_status
                0x00003b98                can_get_data
                0x00003bc0                can_auto_baudrate
                0x00003ea4                can_fixed_baudrate
 .text          0x00003ebe      0xb46 can_std/can_lib.o
                0x00003ebe                can_get_status
                0x00003fe4                can_cmd
                0x000049ea                can_init
 .text          0x00004a04       0xd6 can_func.o
                0x00004a04                init_can_data_mobs
                0x00004a48                can_data_mob_setup
                0x00004a9a                can_send
 .text          0x00004ada      0x128 isr.o
                0x00004ada                __vector_21
                0x00004b30                __vector_16
 .text          0x00004c02        0x0 error.o
 .text          0x00004c02      0x150 comm.o
                0x00004c02                send_status
 .text          0x00004d52       0x50 log.o
                0x00004d52                get_free_log_number
 .text          0x00004da2      0x214 xitoa.o
                0x00004da2                xputc
                0x00004dc0                xputs
                0x00004dce                xitoa
                0x00004e44                xprintf
                0x00004f00                xatoi
 .text          0x00004fb6        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .text          0x00004fb6        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x00004fb6        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
 .text          0x00004fb6        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
 .text          0x00004fb6        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .text          0x00004fb6        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
 .text          0x00004fb6        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .text          0x00004fb6      0x354 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o)
                0x0000524e                __subsf3
                0x000052b0                __addsf3
 .text          0x0000530a      0x1f4 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mul_sf.o)
                0x0000530a                __mulsf3
 .text          0x000054fe      0x158 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_div_sf.o)
                0x000054fe                __divsf3
 .text          0x00005656       0xa8 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_sf_to_si.o)
                0x00005656                __fixsfsi
 .text          0x000056fe        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_thenan_sf.o)
 .text          0x000056fe      0x1aa /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_pack_sf.o)
                0x000056fe                __pack_f
 .text          0x000058a8       0xf0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_unpack_sf.o)
                0x000058a8                __unpack_f
 .text          0x00005998        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
 .text          0x00005998        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
 .text          0x00005998        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
 .text          0x00005998        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
 .text          0x00005998        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
                0x00005998                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00005998       0x3e /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
                0x00005998                __mulsi3
 .text.libgcc   0x000059d6       0x44 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
                0x000059d6                __udivmodsi4
 .text.libgcc   0x00005a1a       0x38 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
                0x00005a1a                __prologue_saves__
 .text.libgcc   0x00005a52       0x36 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
                0x00005a52                __epilogue_restores__
 .text.libgcc   0x00005a88        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00005a88        0xc /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
                0x00005a88                __tablejump2__
                0x00005a8c                __tablejump__
 .text.libgcc   0x00005a94        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00005a94       0x3c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
                0x00005a94                atoi
 .text.avr-libc
                0x00005ad0       0x42 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
                0x00005ad0                itoa
 .text.avr-libc
                0x00005b12       0x10 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
                0x00005b12                __mulhi_const_10
 .text.avr-libc
                0x00005b22       0x20 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
                0x00005b22                strrev
 .text.libgcc   0x00005b42       0x28 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
                0x00005b42                __udivmodhi4
                0x00005b6a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00005b6a        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
                0x00005b6a                exit
                0x00005b6a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00005b6a        0x4 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00005b6e                _etext = .

.data           0x00800100       0x22 load address 0x00005b6e
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 .data          0x00800100        0x3 main.o
 .data          0x00800103        0x0 uart.o
 .data          0x00800103        0xb sdcard_fs_driver/ff.o
 .data          0x0080010e        0x1 sdcard_fs_driver/mmc.o
 .data          0x0080010f        0x0 sdcard_fs_driver/rtc.o
 .data          0x0080010f        0x0 can_std/can_drv.o
 .data          0x0080010f        0x0 can_std/can_lib.o
 .data          0x0080010f        0x0 can_func.o
 .data          0x0080010f        0xa isr.o
 .data          0x00800119        0x0 error.o
 .data          0x00800119        0x0 comm.o
 .data          0x00800119        0x0 log.o
 .data          0x00800119        0x0 xitoa.o
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mul_sf.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_div_sf.o)
 .data          0x00800119        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_sf_to_si.o)
 .data          0x00800119        0x8 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_thenan_sf.o)
                0x00800119                __thenan_sf
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_pack_sf.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_unpack_sf.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
 .data          0x00800121        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800122                . = ALIGN (0x2)
 *fill*         0x00800121        0x1 00
                0x00800122                _edata = .
                0x00800122                PROVIDE (__data_end, .)

.bss            0x00800122      0x796
                0x00800122                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800122        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 .bss           0x00800122        0x0 main.o
 .bss           0x00800122        0x0 uart.o
 .bss           0x00800122        0x5 sdcard_fs_driver/ff.o
 .bss           0x00800127        0x3 sdcard_fs_driver/mmc.o
 .bss           0x0080012a        0x0 sdcard_fs_driver/rtc.o
 .bss           0x0080012a        0x0 can_std/can_drv.o
 .bss           0x0080012a        0x0 can_std/can_lib.o
 .bss           0x0080012a        0x1 can_func.o
                0x0080012a                bufferindex
 .bss           0x0080012b        0x4 isr.o
                0x0080012b                RecIndex
                0x0080012d                testvar
 .bss           0x0080012f        0x2 error.o
                0x0080012f                EcuCommError
                0x00800130                EcuErrorTmp
 .bss           0x00800131        0x0 comm.o
 .bss           0x00800131        0x0 log.o
 .bss           0x00800131        0x2 xitoa.o
                0x00800131                xfunc_out
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_prologue.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_epilogue.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_tablejump.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_addsub_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mul_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_div_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_sf_to_si.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_thenan_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_pack_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_unpack_sf.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
 .bss           0x00800133        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800133      0x736 main.o
                0x00800133                Fatfs
                0x00800365                Finfo
                0x0080037b                acc_dirs
                0x0080037d                acc_files
                0x0080037f                Timer
                0x00800381                EcuData
                0x00800465                Buff
                0x00800865                acc_size
 COMMON         0x00800869       0x4f can_func.o
                0x00800869                tx_remote_buffer
                0x00800871                response_buffer
                0x00800881                tx_remote_msg
                0x0080088e                databuffer
                0x0080089e                response_msg
                0x008008b8                PROVIDE (__bss_end, .)
                0x00005b6e                __data_load_start = LOADADDR (.data)
                0x00005b90                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008008b8        0x0
                0x008008b8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008008b8                PROVIDE (__noinit_end, .)
                0x008008b8                _end = .
                0x008008b8                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x18c0
 *(.stab)
 .stab          0x00000000      0x750 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o
 .stab          0x00000750      0xcfc xitoa.o
                                0xd08 (size before relaxing)
 .stab          0x0000144c      0x174 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(atoi.o)
                                0x180 (size before relaxing)
 .stab          0x000015c0      0x1b0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x00001770       0x78 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(mul10.o)
                                 0x84 (size before relaxing)
 .stab          0x000017e8       0xd8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000      0x152
 *(.stabstr)
 .stabstr       0x00000000      0x152 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtcan128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x160
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 uart.o
 .debug_aranges
                0x00000040       0x20 sdcard_fs_driver/ff.o
 .debug_aranges
                0x00000060       0x20 sdcard_fs_driver/mmc.o
 .debug_aranges
                0x00000080       0x20 sdcard_fs_driver/rtc.o
 .debug_aranges
                0x000000a0       0x20 can_std/can_drv.o
 .debug_aranges
                0x000000c0       0x20 can_std/can_lib.o
 .debug_aranges
                0x000000e0       0x20 can_func.o
 .debug_aranges
                0x00000100       0x20 isr.o
 .debug_aranges
                0x00000120       0x20 comm.o
 .debug_aranges
                0x00000140       0x20 log.o

.debug_pubnames
                0x00000000      0x5bc
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x10d main.o
 .debug_pubnames
                0x0000010d       0xb7 uart.o
 .debug_pubnames
                0x000001c4       0xd0 sdcard_fs_driver/ff.o
 .debug_pubnames
                0x00000294       0x75 sdcard_fs_driver/mmc.o
 .debug_pubnames
                0x00000309       0x3f sdcard_fs_driver/rtc.o
 .debug_pubnames
                0x00000348       0x92 can_std/can_drv.o
 .debug_pubnames
                0x000003da       0x3e can_std/can_lib.o
 .debug_pubnames
                0x00000418       0xb8 can_func.o
 .debug_pubnames
                0x000004d0       0x57 isr.o
 .debug_pubnames
                0x00000527       0x33 error.o
 .debug_pubnames
                0x0000055a       0x2e comm.o
 .debug_pubnames
                0x00000588       0x34 log.o

.debug_info     0x00000000     0x4218
 *(.debug_info)
 .debug_info    0x00000000      0xf50 main.o
 .debug_info    0x00000f50      0x2dd uart.o
 .debug_info    0x0000122d     0x174a sdcard_fs_driver/ff.o
 .debug_info    0x00002977      0x715 sdcard_fs_driver/mmc.o
 .debug_info    0x0000308c      0x1c3 sdcard_fs_driver/rtc.o
 .debug_info    0x0000324f      0x325 can_std/can_drv.o
 .debug_info    0x00003574      0x2e1 can_std/can_lib.o
 .debug_info    0x00003855      0x32b can_func.o
 .debug_info    0x00003b80      0x13c isr.o
 .debug_info    0x00003cbc       0x9d error.o
 .debug_info    0x00003d59       0xe3 comm.o
 .debug_info    0x00003e3c      0x3dc log.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000     0x1161
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x3bd main.o
 .debug_abbrev  0x000003bd      0x161 uart.o
 .debug_abbrev  0x0000051e      0x2f5 sdcard_fs_driver/ff.o
 .debug_abbrev  0x00000813      0x217 sdcard_fs_driver/mmc.o
 .debug_abbrev  0x00000a2a       0xfc sdcard_fs_driver/rtc.o
 .debug_abbrev  0x00000b26      0x101 can_std/can_drv.o
 .debug_abbrev  0x00000c27      0x13f can_std/can_lib.o
 .debug_abbrev  0x00000d66      0x125 can_func.o
 .debug_abbrev  0x00000e8b       0xc3 isr.o
 .debug_abbrev  0x00000f4e       0x51 error.o
 .debug_abbrev  0x00000f9f       0x9d comm.o
 .debug_abbrev  0x0000103c      0x125 log.o

.debug_line     0x00000000     0x3299
 *(.debug_line)
 .debug_line    0x00000000      0x6de main.o
 .debug_line    0x000006de      0x23b uart.o
 .debug_line    0x00000919     0x14bb sdcard_fs_driver/ff.o
 .debug_line    0x00001dd4      0x820 sdcard_fs_driver/mmc.o
 .debug_line    0x000025f4       0xd1 sdcard_fs_driver/rtc.o
 .debug_line    0x000026c5      0x325 can_std/can_drv.o
 .debug_line    0x000029ea      0x3c8 can_std/can_lib.o
 .debug_line    0x00002db2      0x13f can_func.o
 .debug_line    0x00002ef1      0x10b isr.o
 .debug_line    0x00002ffc       0x57 error.o
 .debug_line    0x00003053      0x18a comm.o
 .debug_line    0x000031dd       0xbc log.o

.debug_frame    0x00000000      0x550
 *(.debug_frame)
 .debug_frame   0x00000000       0xd0 main.o
 .debug_frame   0x000000d0       0xb0 uart.o
 .debug_frame   0x00000180      0x170 sdcard_fs_driver/ff.o
 .debug_frame   0x000002f0       0xc0 sdcard_fs_driver/mmc.o
 .debug_frame   0x000003b0       0x40 sdcard_fs_driver/rtc.o
 .debug_frame   0x000003f0       0x70 can_std/can_drv.o
 .debug_frame   0x00000460       0x40 can_std/can_lib.o
 .debug_frame   0x000004a0       0x40 can_func.o
 .debug_frame   0x000004e0       0x30 isr.o
 .debug_frame   0x00000510       0x20 comm.o
 .debug_frame   0x00000530       0x20 log.o

.debug_str      0x00000000      0xbdd
 *(.debug_str)
 .debug_str     0x00000000      0x447 main.o
                                0x4d0 (size before relaxing)
 .debug_str     0x00000447       0xb8 uart.o
                                0x198 (size before relaxing)
 .debug_str     0x000004ff      0x2f9 sdcard_fs_driver/ff.o
                                0x4e5 (size before relaxing)
 .debug_str     0x000007f8       0xe8 sdcard_fs_driver/mmc.o
                                0x233 (size before relaxing)
 .debug_str     0x000008e0       0x2e sdcard_fs_driver/rtc.o
                                0x12b (size before relaxing)
 .debug_str     0x0000090e      0x18b can_std/can_drv.o
                                0x264 (size before relaxing)
 .debug_str     0x00000a99       0x57 can_std/can_lib.o
                                0x217 (size before relaxing)
 .debug_str     0x00000af0       0x68 can_func.o
                                0x255 (size before relaxing)
 .debug_str     0x00000b58       0x48 isr.o
                                0x12a (size before relaxing)
 .debug_str     0x00000ba0        0x8 error.o
                                 0xed (size before relaxing)
 .debug_str     0x00000ba8       0x13 comm.o
                                0x102 (size before relaxing)
 .debug_str     0x00000bbb       0x22 log.o
                                0x2aa (size before relaxing)

.debug_loc      0x00000000     0x3af7
 *(.debug_loc)
 .debug_loc     0x00000000      0x2ec main.o
 .debug_loc     0x000002ec      0x16c uart.o
 .debug_loc     0x00000458     0x2902 sdcard_fs_driver/ff.o
 .debug_loc     0x00002d5a      0x5a7 sdcard_fs_driver/mmc.o
 .debug_loc     0x00003301       0x40 sdcard_fs_driver/rtc.o
 .debug_loc     0x00003341      0x3f7 can_std/can_drv.o
 .debug_loc     0x00003738      0x315 can_std/can_lib.o
 .debug_loc     0x00003a4d       0x6a can_func.o
 .debug_loc     0x00003ab7       0x40 log.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(node1.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x1c8
 .debug_ranges  0x00000000       0x78 main.o
 .debug_ranges  0x00000078       0x30 uart.o
 .debug_ranges  0x000000a8       0xf0 sdcard_fs_driver/ff.o
 .debug_ranges  0x00000198       0x30 sdcard_fs_driver/mmc.o
