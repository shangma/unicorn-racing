Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodhi4.o)
                              uart_lib.o (__udivmodhi4)
/usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodhi4.o)
                              uart_lib.o (__divmodhi4)
/usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodsi4.o)
                              uart_lib.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodsi4.o)
                              uart_lib.o (__divmodsi4)
/usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o (exit)
/usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
                              node1.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

rtc_minutes         0x1               rtc_drv.o
response_buffer     0x9               node1.o
rtc_days            0x1               rtc_drv.o
rtc_milliseconds    0x2               rtc_drv.o
rtc_tics            0x4               rtc_drv.o
rtc_hours           0x1               rtc_drv.o
rtc_seconds         0x1               rtc_drv.o
response_msg        0xd               node1.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
LOAD node1.o
LOAD can_drv.o
LOAD can_lib.o
LOAD led_drv.o
LOAD rtc_drv.o
LOAD uart_drv.o
LOAD uart_lib.o
LOAD /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x2ece
 *(.vectors)
 .vectors       0x00000000       0x94 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000094                . = ALIGN (0x2)
                0x00000094                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000094        0x0 linker stubs
 *(.trampolines*)
                0x00000094                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000094                __ctors_start = .
 *(.ctors)
                0x00000094                __ctors_end = .
                0x00000094                __dtors_start = .
 *(.dtors)
                0x00000094                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000094        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
                0x00000094                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000094        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000a0       0x1a /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
                0x000000a0                __do_copy_data
 .init4         0x000000ba       0x10 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
                0x000000ba                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ca        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x000000d2        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
                0x000000d2                __vector_22
                0x000000d2                __vector_28
                0x000000d2                __vector_1
                0x000000d2                __vector_32
                0x000000d2                __vector_34
                0x000000d2                __vector_24
                0x000000d2                __vector_12
                0x000000d2                __bad_interrupt
                0x000000d2                __vector_6
                0x000000d2                __vector_31
                0x000000d2                __vector_35
                0x000000d2                __vector_3
                0x000000d2                __vector_23
                0x000000d2                __vector_30
                0x000000d2                __vector_25
                0x000000d2                __vector_11
                0x000000d2                __vector_13
                0x000000d2                __vector_17
                0x000000d2                __vector_19
                0x000000d2                __vector_7
                0x000000d2                __vector_27
                0x000000d2                __vector_5
                0x000000d2                __vector_33
                0x000000d2                __vector_4
                0x000000d2                __vector_2
                0x000000d2                __vector_21
                0x000000d2                __vector_15
                0x000000d2                __vector_36
                0x000000d2                __vector_29
                0x000000d2                __vector_8
                0x000000d2                __vector_26
                0x000000d2                __vector_14
                0x000000d2                __vector_10
                0x000000d2                __vector_16
                0x000000d2                __vector_20
 .text          0x000000d6      0x498 node1.o
                0x000000d6                main
                0x000001ca                display_sensor_values
                0x000002e4                __vector_18
 .text          0x0000056e      0x67e can_drv.o
                0x0000056e                can_clear_all_mob
                0x000005c6                can_get_mob_free
                0x00000630                can_get_mob_status
                0x0000069c                can_get_data
                0x000006f4                can_auto_baudrate
                0x00000bb6                can_fixed_baudrate
 .text          0x00000bec     0x14f8 can_lib.o
                0x00000bec                can_init
                0x00000c28                can_cmd
                0x00001ea2                can_get_status
 .text          0x000020e4      0x10e led_drv.o
                0x000020e4                led_init
                0x00002100                write_led
                0x0000211c                swap_nibble_led
                0x00002154                toggle_led
                0x0000216a                write_led_number
 .text          0x000021f2      0x2d0 rtc_drv.o
                0x000021f2                wait_for
                0x000022ee                rtc_int_init
                0x000023f2                __vector_9
 .text          0x000024c2       0x50 uart_drv.o
                0x000024c2                uart_rx_get_3_data
                0x000024f2                uart_rx_get_data
 .text          0x00002512      0x8f0 uart_lib.o
                0x00002512                uart_init
                0x000025fc                uart_test_hit
                0x00002616                uart_putchar
                0x0000265a                uart_getchar
                0x0000268c                uart_put_string
                0x000026c6                uart_mini_printf
 .text          0x00002e02        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x00002e02        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodhi4.o)
 .text          0x00002e02        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x00002e02        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodsi4.o)
 .text          0x00002e02        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 .text          0x00002e02        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
                0x00002e02                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00002e02       0x28 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodhi4.o)
                0x00002e02                __udivmodhi4
 .text.libgcc   0x00002e2a       0x26 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodhi4.o)
                0x00002e2a                __divmodhi4
                0x00002e2a                _div
 .text.libgcc   0x00002e50       0x44 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodsi4.o)
                0x00002e50                __udivmodsi4
 .text.libgcc   0x00002e94       0x36 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodsi4.o)
                0x00002e94                __divmodsi4
 .text.libgcc   0x00002eca        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00002eca        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
                0x00002eca                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00002eca        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
                0x00002eca                exit
                0x00002eca                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00002eca        0x4 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00002ece                _etext = .

.data           0x00800100      0x25a load address 0x00002ece
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
 .data          0x00800100       0x81 node1.o
 .data          0x00800181        0x0 can_drv.o
 .data          0x00800181        0x0 can_lib.o
 .data          0x00800181        0x0 led_drv.o
 .data          0x00800181        0x0 rtc_drv.o
 .data          0x00800181        0x0 uart_drv.o
 .data          0x00800181      0x1d9 uart_lib.o
                0x00800181                txt_logo_atmel
                0x00800331                txt_small_logo_atmel
 .data          0x0080035a        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0080035a        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0080035a        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0080035a        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0080035a        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 .data          0x0080035a        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080035a                . = ALIGN (0x2)
                0x0080035a                _edata = .
                0x0080035a                PROVIDE (__data_end, .)

.bss            0x0080035a       0x21
                0x0080035a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080035a        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o
 .bss           0x0080035a        0x0 node1.o
 .bss           0x0080035a        0x0 can_drv.o
 .bss           0x0080035a        0x0 can_lib.o
 .bss           0x0080035a        0x0 led_drv.o
 .bss           0x0080035a        0x1 rtc_drv.o
                0x0080035a                rtc_running
 .bss           0x0080035b        0x0 uart_drv.o
 .bss           0x0080035b        0x0 uart_lib.o
 .bss           0x0080035b        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0080035b        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0080035b        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x0080035b        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x0080035b        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 .bss           0x0080035b        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080035b       0x16 node1.o
                0x0080035b                response_buffer
                0x00800364                response_msg
 COMMON         0x00800371        0xa rtc_drv.o
                0x00800371                rtc_minutes
                0x00800372                rtc_days
                0x00800373                rtc_milliseconds
                0x00800375                rtc_tics
                0x00800379                rtc_hours
                0x0080037a                rtc_seconds
                0x0080037b                PROVIDE (__bss_end, .)
                0x00002ece                __data_load_start = LOADADDR (.data)
                0x00003128                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080037b        0x0
                0x0080037b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080037b                PROVIDE (__noinit_end, .)
                0x0080037b                _end = .
                0x0080037b                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x750
 *(.stab)
 .stab          0x00000000      0x750 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtcan128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xe0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 node1.o
 .debug_aranges
                0x00000020       0x20 can_drv.o
 .debug_aranges
                0x00000040       0x20 can_lib.o
 .debug_aranges
                0x00000060       0x20 led_drv.o
 .debug_aranges
                0x00000080       0x20 rtc_drv.o
 .debug_aranges
                0x000000a0       0x20 uart_drv.o
 .debug_aranges
                0x000000c0       0x20 uart_lib.o

.debug_pubnames
                0x00000000      0x332
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x6a node1.o
 .debug_pubnames
                0x0000006a       0x92 can_drv.o
 .debug_pubnames
                0x000000fc       0x3e can_lib.o
 .debug_pubnames
                0x0000013a       0x65 led_drv.o
 .debug_pubnames
                0x0000019f       0xac rtc_drv.o
 .debug_pubnames
                0x0000024b       0x3e uart_drv.o
 .debug_pubnames
                0x00000289       0xa9 uart_lib.o

.debug_info     0x00000000      0xf70
 *(.debug_info)
 .debug_info    0x00000000      0x2d3 node1.o
 .debug_info    0x000002d3      0x30e can_drv.o
 .debug_info    0x000005e1      0x2d8 can_lib.o
 .debug_info    0x000008b9      0x12a led_drv.o
 .debug_info    0x000009e3      0x1b9 rtc_drv.o
 .debug_info    0x00000b9c       0xd9 uart_drv.o
 .debug_info    0x00000c75      0x2fb uart_lib.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x65e
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x122 node1.o
 .debug_abbrev  0x00000122       0xf2 can_drv.o
 .debug_abbrev  0x00000214      0x13f can_lib.o
 .debug_abbrev  0x00000353       0xae led_drv.o
 .debug_abbrev  0x00000401       0xbe rtc_drv.o
 .debug_abbrev  0x000004bf       0x8c uart_drv.o
 .debug_abbrev  0x0000054b      0x113 uart_lib.o

.debug_line     0x00000000     0x155c
 *(.debug_line)
 .debug_line    0x00000000      0x2a5 node1.o
 .debug_line    0x000002a5      0x47c can_drv.o
 .debug_line    0x00000721      0x46d can_lib.o
 .debug_line    0x00000b8e      0x120 led_drv.o
 .debug_line    0x00000cae      0x208 rtc_drv.o
 .debug_line    0x00000eb6       0xb4 uart_drv.o
 .debug_line    0x00000f6a      0x5f2 uart_lib.o

.debug_frame    0x00000000      0x230
 *(.debug_frame)
 .debug_frame   0x00000000       0x40 node1.o
 .debug_frame   0x00000040       0x70 can_drv.o
 .debug_frame   0x000000b0       0x40 can_lib.o
 .debug_frame   0x000000f0       0x60 led_drv.o
 .debug_frame   0x00000150       0x40 rtc_drv.o
 .debug_frame   0x00000190       0x30 uart_drv.o
 .debug_frame   0x000001c0       0x70 uart_lib.o

.debug_str      0x00000000      0x60e
 *(.debug_str)
 .debug_str     0x00000000      0x1da node1.o
                                0x21c (size before relaxing)
 .debug_str     0x000001da      0x18c can_drv.o
                                0x25b (size before relaxing)
 .debug_str     0x00000366       0x53 can_lib.o
                                0x20e (size before relaxing)
 .debug_str     0x000003b9       0x6f led_drv.o
                                0x143 (size before relaxing)
 .debug_str     0x00000428       0x89 rtc_drv.o
                                0x157 (size before relaxing)
 .debug_str     0x000004b1       0x3b uart_drv.o
                                0x104 (size before relaxing)
 .debug_str     0x000004ec      0x122 uart_lib.o
                                0x209 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(node.elf elf32-avr)
LOAD linker stubs
