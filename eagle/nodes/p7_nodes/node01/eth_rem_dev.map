Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_prologue.o)
                              main.o (__prologue_saves__)
/usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_epilogue.o)
                              ip_arp_udp.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/libc.a(strncmp.o)
                              main.o (strncmp)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
LOAD main.o
LOAD ip_arp_udp.o
LOAD enc28j60.o
LOAD timeout.o
LOAD /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xd28
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x120 main.o
                0x00000000000001ac                verify_password
                0x00000000000000a6                main
 .text          0x00000000000001c6      0x5fc ip_arp_udp.o
                0x0000000000000486                make_udp_reply_from_request
                0x00000000000005da                udp_test_sender
                0x0000000000000392                send_node02_udp
                0x0000000000000282                init_ip_arp_udp
                0x00000000000002f8                eth_type_is_ip_and_my_ip
                0x00000000000002c2                eth_type_is_arp_and_my_ip
                0x0000000000000350                make_ip
                0x0000000000000524                make_echo_reply_from_request
                0x0000000000000336                make_eth
                0x0000000000000572                make_arp_answer_from_request
                0x00000000000001c6                checksum
 .text          0x00000000000007c2      0x4a8 enc28j60.o
                0x0000000000000806                enc28j60ReadBuffer
                0x0000000000000868                enc28j60SetBank
                0x0000000000000ae2                enc28j60Init
                0x00000000000007ec                enc28j60WriteOp
                0x00000000000008be                enc28j60Read
                0x000000000000083c                enc28j60WriteBuffer
                0x00000000000008fc                enc28j60PhyWrite
                0x0000000000000936                enc28j60getrev
                0x00000000000009f4                enc28j60PacketReceive
                0x00000000000007c2                enc28j60ReadOp
                0x00000000000008d2                enc28j60Write
                0x000000000000093e                enc28j60PacketSend
 .text          0x0000000000000c6a       0x30 timeout.o
                0x0000000000000c96                wd_kick
                0x0000000000000c7e                wd_init
                0x0000000000000c6a                delay_ms
 .text          0x0000000000000c9a        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000000c9a        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_epilogue.o)
 .text          0x0000000000000c9a        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000c9a        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000c9a        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000c9a       0x1c /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/libc.a(strncmp.o)
                0x0000000000000c9a                strncmp
                0x0000000000000cb6                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000cb6       0x38 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_prologue.o)
                0x0000000000000cb6                __prologue_saves__
 .text.libgcc   0x0000000000000cee       0x36 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_epilogue.o)
                0x0000000000000cee                __epilogue_restores__
 .text.libgcc   0x0000000000000d24        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000d24        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000d24        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000d24                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000d24        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_exit.o)
                0x0000000000000d24                exit
                0x0000000000000d24                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000d24        0x4 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000d28                _etext = .

.data           0x0000000000800100       0x1c load address 0x0000000000000d28
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100       0x11 main.o
 .data          0x0000000000800111        0xa ip_arp_udp.o
 .data          0x000000000080011b        0x0 enc28j60.o
 .data          0x000000000080011b        0x0 timeout.o
 .data          0x000000000080011b        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_prologue.o)
 .data          0x000000000080011b        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_epilogue.o)
 .data          0x000000000080011b        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_exit.o)
 .data          0x000000000080011b        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080011b        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x000000000080011b        0x0 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/libc.a(strncmp.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080011c                . = ALIGN (0x2)
 *fill*         0x000000000080011b        0x1 00
                0x000000000080011c                _edata = .
                0x000000000080011c                PROVIDE (__data_end, .)

.bss            0x000000000080011c      0x108 load address 0x0000000000000d44
                0x000000000080011c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
 .bss           0x000000000080011c       0xfb main.o
 .bss           0x0000000000800217        0xa ip_arp_udp.o
 .bss           0x0000000000800221        0x3 enc28j60.o
 .bss           0x0000000000800224        0x0 timeout.o
 .bss           0x0000000000800224        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800224        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_epilogue.o)
 .bss           0x0000000000800224        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800224        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800224        0x0 /usr/lib/gcc/avr/4.3.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800224        0x0 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/libc.a(strncmp.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800224                PROVIDE (__bss_end, .)
                0x0000000000000d28                __data_load_start = LOADADDR (.data)
                0x0000000000000d44                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800224        0x0
                0x0000000000800224                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800224                PROVIDE (__noinit_end, .)
                0x0000000000800224                _end = .
                0x0000000000800224                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x2d60
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o
 .stab          0x00000000000006b4      0x648 main.o
                                        0x654 (size before relaxing)
 .stab          0x0000000000000cfc      0xe34 ip_arp_udp.o
                                        0xff0 (size before relaxing)
 .stab          0x0000000000001b30      0xe58 enc28j60.o
                                       0x1014 (size before relaxing)
 .stab          0x0000000000002988      0x318 timeout.o
                                        0x4ec (size before relaxing)
 .stab          0x0000000000002ca0       0xc0 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/libc.a(strncmp.o)
                                         0xcc (size before relaxing)

.stabstr        0x0000000000000000     0x10e9
 *(.stabstr)
 .stabstr       0x0000000000000000     0x10e9 /usr/lib/gcc/avr/4.3.0/../../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(eth_rem_dev.out elf32-avr)
LOAD linker stubs
