GAS LISTING /tmp/cczY6cNe.s 			page 1


   1               		.file	"isr.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.stabs	"/home/css/Documents/unicorn-racing/avr/CAN/pwdtest/",100,0,2,.Ltext0
  11               		.stabs	"isr.c",100,0,2,.Ltext0
  12               		.text
  13               	.Ltext0:
  14               		.stabs	"gcc2_compiled.",60,0,0,0
  15               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,1,0
  16               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,1,0
  17               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,1,0
  18               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,1,0
  19               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,1,0
  20               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,1,
  21               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,1,0
  22               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,1,0
  23               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,1,0
  24               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,1,0
  25               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,1,0
  26               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,1,0
  27               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,1,0
  28               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,1,0
  29               		.stabs	"void:t(0,15)=(0,15)",128,0,1,0
  30               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/io.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/inttypes.h",130,0,0,0
  33               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/stdint.h",130,0,0,0
  34               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,121,0
  35               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,122,0
  36               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,123,0
  37               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,124,0
  38               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,125,0
  39               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,126,0
  40               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,128,0
  41               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,129,0
  42               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,142,0
  43               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,147,0
  44               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,159,0
  45               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,164,0
  46               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,169,0
  47               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,174,0
  48               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,179,0
  49               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,184,0
  50               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,192,0
  51               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,199,0
  52               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,213,0
  53               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,218,0
  54               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,223,0
  55               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,228,0
  56               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,233,0
  57               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,238,0
GAS LISTING /tmp/cczY6cNe.s 			page 2


  58               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,246,0
  59               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,253,0
  60               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,273,0
  61               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,278,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(3,1)=(4,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(3,2)=(4,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/fuse.h",130,0,0,0
  68               		.stabs	"__fuse_t:t(5,1)=(5,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,239,0
  69               		.stabn	162,0,0,0
  70               		.stabn	162,0,0,0
  71               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/stdlib.h",130,0,0,0
  72               		.stabs	"/usr/lib/gcc/avr/4.3.4/include/stddef.h",130,0,0,0
  73               		.stabs	"size_t:t(7,1)=(0,4)",128,0,214,0
  74               		.stabs	"wchar_t:t(7,2)=(0,1)",128,0,326,0
  75               		.stabn	162,0,0,0
  76               		.stabs	"div_t:t(6,1)=(6,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
  77               		.stabs	"ldiv_t:t(6,3)=(6,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
  78               		.stabs	"__compar_fn_t:t(6,5)=(6,6)=*(6,7)=f(0,1)",128,0,80,0
  79               		.stabn	162,0,0,0
  80               		.stabs	"__vector_18:F(0,15)",36,0,187,__vector_18
  81               	.global	__vector_18
  82               		.type	__vector_18, @function
  83               	__vector_18:
  84               		.stabd	46,0,0
   0:isr.c         **** /*********************************************
   1:isr.c         ****  * Interrupt-service-rutiner
   2:isr.c         ****  *********************************************/
   3:isr.c         **** 
   4:isr.c         **** #include <config.h>
   5:isr.c         **** #include <extern.h>
   6:isr.c         **** #include <prototyper.h>
   7:isr.c         **** #include <avr/io.h>
   8:isr.c         **** #include <stdlib.h>
   9:isr.c         **** #include <avr/interrupt.h>
  10:isr.c         **** 
  11:isr.c         **** // ADC
  12:isr.c         **** unsigned int ADCconv = 0;
  13:isr.c         **** char setChannel = 0;
  14:isr.c         **** 
  15:isr.c         **** // Temp Var
  16:isr.c         **** char count = 0;
  17:isr.c         **** char retning = 0;
  18:isr.c         **** char tempchar[5];
  19:isr.c         **** 
  20:isr.c         **** // ADC convert complete
  21:isr.c         **** ISR(ADC_vect)
  22:isr.c         **** {
  23:isr.c         **** 	unsigned int adlow = 0;
  24:isr.c         **** 	unsigned int adhigh = 0;
  25:isr.c         **** 	char channel = 0;
  26:isr.c         **** 		
  27:isr.c         **** 	// Read ADC channel
  28:isr.c         **** 	channel = ADMUX & 0x07;
  29:isr.c         **** 
GAS LISTING /tmp/cczY6cNe.s 			page 3


  30:isr.c         **** 	// Read ADC convertion
  31:isr.c         ****     adlow=ADCL;
  32:isr.c         ****     adhigh=ADCH;
  33:isr.c         **** 	ADCconv = (unsigned int)((adhigh<<8)|(adlow & 0xFF));	
  34:isr.c         **** 
  35:isr.c         **** 	// Channel 0 = Press ADC convert
  36:isr.c         **** 	if(channel == 0)
  37:isr.c         **** 	{
  38:isr.c         **** 		// Press Controller
  39:isr.c         **** 		presscontroller(ADCconv);	
  40:isr.c         **** 	}
  41:isr.c         **** 
  42:isr.c         **** 	// Channel 1 = Kobling pos ADC convert
  43:isr.c         **** 	if(channel == 1)
  44:isr.c         **** 	{
  45:isr.c         **** 		// Kobling Controller
  46:isr.c         **** 		KoblingPosController(ADCconv);
  47:isr.c         **** 		debugging();
  48:isr.c         **** 	}
  49:isr.c         **** 
  50:isr.c         **** 	// Channel 2 = Gear pos ADC convert
  51:isr.c         **** 	//if(channel == 2)
  52:isr.c         **** 	//{
  53:isr.c         **** 	//}
  54:isr.c         **** }
  55:isr.c         **** 
  56:isr.c         ****  //----- UART Interrupt --------------------------------------------------------
  57:isr.c         **** ISR(USART0_RX_vect)
  58:isr.c         **** {
  59:isr.c         **** 	char data;
  60:isr.c         **** 	char tempchar[5];	
  61:isr.c         **** 	data = UDR0;	// Lægger data fra seriel bufffer i variabel 
  62:isr.c         **** 
  63:isr.c         ****     if(data == '1')
  64:isr.c         ****     {
  65:isr.c         **** 	    KoblingPosRef = 130;
  66:isr.c         **** 	}
  67:isr.c         **** 
  68:isr.c         ****     if(data == '2')
  69:isr.c         ****     {
  70:isr.c         **** 	    KoblingPosRef = 70;
  71:isr.c         **** 	}
  72:isr.c         **** 
  73:isr.c         ****     if(data == '3')
  74:isr.c         ****     {
  75:isr.c         **** 	    KoblingPosRef = 10;
  76:isr.c         **** 	}
  77:isr.c         **** 
  78:isr.c         ****     if(data == 'u')
  79:isr.c         ****     {
  80:isr.c         ****     KoblingPosRef = KoblingPosRef+10;
  81:isr.c         ****     }
  82:isr.c         **** 
  83:isr.c         ****     if(data == 'h')
  84:isr.c         ****     {
  85:isr.c         ****     KoblingPosRef = KoblingPosRef-10;
  86:isr.c         ****     }
GAS LISTING /tmp/cczY6cNe.s 			page 4


  87:isr.c         **** 
  88:isr.c         ****     if(data == 'z')
  89:isr.c         ****     {
  90:isr.c         ****     pressRef++;
  91:isr.c         ****     }
  92:isr.c         **** 
  93:isr.c         ****     if(data == 'x')
  94:isr.c         ****     {
  95:isr.c         ****     pressRef--;
  96:isr.c         ****     }
  97:isr.c         **** 
  98:isr.c         ****     if(data == '<')
  99:isr.c         ****     {
 100:isr.c         ****     pressRef = 110;
 101:isr.c         ****     }
 102:isr.c         **** 
 103:isr.c         ****     if(data == 'c')
 104:isr.c         ****     {
 105:isr.c         ****     pressRef = 0;
 106:isr.c         ****     }
 107:isr.c         **** 
 108:isr.c         ****     if(data == 'p')
 109:isr.c         ****     {
 110:isr.c         ****     KoblingPosKP = KoblingPosKP + 0.1;
 111:isr.c         ****     }
 112:isr.c         **** 
 113:isr.c         ****     if(data == 'l')
 114:isr.c         ****     {
 115:isr.c         ****     KoblingPosKP = KoblingPosKP - 0.1;
 116:isr.c         ****     }
 117:isr.c         **** 	
 118:isr.c         **** 	if(data == 'a')
 119:isr.c         ****     {
 120:isr.c         ****         count = 0;
 121:isr.c         ****         retning = 0;
 122:isr.c         ****         PWM_duty_cycle_A_set(0);
 123:isr.c         **** 	    PWM_duty_cycle_B_set(0);
 124:isr.c         ****     }
 125:isr.c         **** 
 126:isr.c         ****     if(data == 'd')
 127:isr.c         ****     {
 128:isr.c         ****         count = 0;
 129:isr.c         ****         retning = 1;
 130:isr.c         ****         PWM_duty_cycle_A_set(0);
 131:isr.c         **** 	    PWM_duty_cycle_B_set(0);
 132:isr.c         ****     }
 133:isr.c         **** 	
 134:isr.c         **** 	if(data == 'w')
 135:isr.c         **** 	{
 136:isr.c         ****         if(count>=254)
 137:isr.c         ****             count = 254;
 138:isr.c         **** 
 139:isr.c         ****         count++;
 140:isr.c         **** 
 141:isr.c         ****         if(retning)
 142:isr.c         **** 		    PWM_duty_cycle_A_set(count);
 143:isr.c         ****         else
GAS LISTING /tmp/cczY6cNe.s 			page 5


 144:isr.c         ****             PWM_duty_cycle_B_set(count);
 145:isr.c         **** 	}	
 146:isr.c         **** 	if(data == 's')
 147:isr.c         **** 	{
 148:isr.c         ****         if(count<=1)
 149:isr.c         ****             count = 1;            
 150:isr.c         **** 
 151:isr.c         ****         count--;
 152:isr.c         ****         
 153:isr.c         ****         if(retning)        
 154:isr.c         **** 		    PWM_duty_cycle_A_set(count);
 155:isr.c         ****         else
 156:isr.c         ****             PWM_duty_cycle_B_set(count);
 157:isr.c         **** 	}
 158:isr.c         **** 	if(data == 'q')
 159:isr.c         **** 	{
 160:isr.c         ****         if(count>=254)
 161:isr.c         ****             count = 254;
 162:isr.c         **** 
 163:isr.c         ****         count = 255;
 164:isr.c         **** 
 165:isr.c         ****         if(retning)
 166:isr.c         **** 		    PWM_duty_cycle_A_set(count);
 167:isr.c         ****         else
 168:isr.c         ****             PWM_duty_cycle_B_set(count);
 169:isr.c         **** 	}
 170:isr.c         **** 	if(data == 'e')
 171:isr.c         **** 	{
 172:isr.c         ****         if(count>=254)
 173:isr.c         ****             count = 254;
 174:isr.c         **** 
 175:isr.c         ****         count = 0;
 176:isr.c         **** 
 177:isr.c         ****         if(retning)
 178:isr.c         **** 		    PWM_duty_cycle_A_set(count);
 179:isr.c         ****         else
 180:isr.c         ****             PWM_duty_cycle_B_set(count);
 181:isr.c         **** 	}	
 182:isr.c         **** }
 183:isr.c         **** 
 184:isr.c         **** // Timer0 (8-bit) overflow interrupt
 185:isr.c         **** ISR(TIMER0_OVF_vect)
 186:isr.c         **** {	
  85               		.stabn	68,0,187,.LM0-.LFBB1
  86               	.LM0:
  87               	.LFBB1:
  88 0000 1F92      		push __zero_reg__
  89 0002 0F92      		push r0
  90 0004 0FB6      		in r0,__SREG__
  91 0006 0F92      		push r0
  92 0008 1124      		clr __zero_reg__
  93 000a 8F93      		push r24
  94 000c 9F93      		push r25
  95               	/* prologue: Signal */
  96               	/* frame size = 0 */
 187:isr.c         **** 	// Change ADC channel
 188:isr.c         **** 	ADMUX &= 0xf8;
GAS LISTING /tmp/cczY6cNe.s 			page 6


  97               		.stabn	68,0,189,.LM1-.LFBB1
  98               	.LM1:
  99 000e 8091 7C00 		lds r24,124
 100 0012 887F      		andi r24,lo8(-8)
 101 0014 8093 7C00 		sts 124,r24
 189:isr.c         **** 	ADMUX |= setChannel++;
 102               		.stabn	68,0,190,.LM2-.LFBB1
 103               	.LM2:
 104 0018 8091 7C00 		lds r24,124
 105 001c 9091 0000 		lds r25,setChannel
 106 0020 892B      		or r24,r25
 107 0022 8093 7C00 		sts 124,r24
 108 0026 9F5F      		subi r25,lo8(-(1))
 109 0028 9093 0000 		sts setChannel,r25
 190:isr.c         **** 	// Start ADC-convert
 191:isr.c         **** 	ADCSRA|=(1<<ADSC);
 110               		.stabn	68,0,192,.LM3-.LFBB1
 111               	.LM3:
 112 002c 8091 7A00 		lds r24,122
 113 0030 8064      		ori r24,lo8(64)
 114 0032 8093 7A00 		sts 122,r24
 192:isr.c         **** 	
 193:isr.c         **** 	if(setChannel>=ADCtotnum)
 115               		.stabn	68,0,194,.LM4-.LFBB1
 116               	.LM4:
 117 0036 9330      		cpi r25,lo8(3)
 118 0038 00F0      		brlo .L3
 194:isr.c         **** 		setChannel = 0;
 119               		.stabn	68,0,195,.LM5-.LFBB1
 120               	.LM5:
 121 003a 1092 0000 		sts setChannel,__zero_reg__
 122               	.L3:
 123               	/* epilogue start */
 195:isr.c         **** }
 124               		.stabn	68,0,196,.LM6-.LFBB1
 125               	.LM6:
 126 003e 9F91      		pop r25
 127 0040 8F91      		pop r24
 128 0042 0F90      		pop r0
 129 0044 0FBE      		out __SREG__,r0
 130 0046 0F90      		pop r0
 131 0048 1F90      		pop __zero_reg__
 132 004a 1895      		reti
 133               		.size	__vector_18, .-__vector_18
 134               	.Lscope1:
 135               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 136               		.stabd	78,0,0
 137               		.data
 138               	.LC0:
 139 0000 3B00      		.string	";"
 140               	.LC1:
 141 0002 0A0D 00   		.string	"\n\r"
 142               		.text
 143               		.stabs	"debugging:F(0,15)",36,0,199,debugging
 144               	.global	debugging
 145               		.type	debugging, @function
 146               	debugging:
GAS LISTING /tmp/cczY6cNe.s 			page 7


 147               		.stabd	46,0,0
 196:isr.c         **** 
 197:isr.c         **** void debugging(void)
 198:isr.c         **** {
 148               		.stabn	68,0,199,.LM7-.LFBB2
 149               	.LM7:
 150               	.LFBB2:
 151 004c EF92      		push r14
 152 004e FF92      		push r15
 153 0050 0F93      		push r16
 154 0052 1F93      		push r17
 155               	/* prologue: function */
 156               	/* frame size = 0 */
 199:isr.c         **** 		itoa(pressRef, tempchar,10); 					// 1 Press Ref
 157               		.stabn	68,0,200,.LM8-.LFBB2
 158               	.LM8:
 159 0054 00E0      		ldi r16,lo8(tempchar)
 160 0056 10E0      		ldi r17,hi8(tempchar)
 161 0058 8091 0000 		lds r24,pressRef
 162 005c 9091 0000 		lds r25,(pressRef)+1
 163 0060 B801      		movw r22,r16
 164 0062 4AE0      		ldi r20,lo8(10)
 165 0064 50E0      		ldi r21,hi8(10)
 166 0066 0E94 0000 		call itoa
 200:isr.c         **** 		sendtekst(tempchar);
 167               		.stabn	68,0,201,.LM9-.LFBB2
 168               	.LM9:
 169 006a C801      		movw r24,r16
 170 006c 0E94 0000 		call sendtekst
 201:isr.c         **** 		sendtekst(";");
 171               		.stabn	68,0,202,.LM10-.LFBB2
 172               	.LM10:
 173 0070 80E0      		ldi r24,lo8(.LC0)
 174 0072 E82E      		mov r14,r24
 175 0074 80E0      		ldi r24,hi8(.LC0)
 176 0076 F82E      		mov r15,r24
 177 0078 C701      		movw r24,r14
 178 007a 0E94 0000 		call sendtekst
 202:isr.c         **** 
 203:isr.c         **** 		itoa((int)(0.17*ADCconv-18.0), tempchar,10); 	// 2 Press Meas
 179               		.stabn	68,0,204,.LM11-.LFBB2
 180               	.LM11:
 181 007e 6091 0000 		lds r22,ADCconv
 182 0082 7091 0000 		lds r23,(ADCconv)+1
 183 0086 80E0      		ldi r24,lo8(0)
 184 0088 90E0      		ldi r25,hi8(0)
 185 008a 0E94 0000 		call __floatunsisf
 186 008e 2BE7      		ldi r18,lo8(0x3e2e147b)
 187 0090 34E1      		ldi r19,hi8(0x3e2e147b)
 188 0092 4EE2      		ldi r20,hlo8(0x3e2e147b)
 189 0094 5EE3      		ldi r21,hhi8(0x3e2e147b)
 190 0096 0E94 0000 		call __mulsf3
 191 009a 20E0      		ldi r18,lo8(0x41900000)
 192 009c 30E0      		ldi r19,hi8(0x41900000)
 193 009e 40E9      		ldi r20,hlo8(0x41900000)
 194 00a0 51E4      		ldi r21,hhi8(0x41900000)
 195 00a2 0E94 0000 		call __subsf3
GAS LISTING /tmp/cczY6cNe.s 			page 8


 196 00a6 0E94 0000 		call __fixsfsi
 197 00aa DC01      		movw r26,r24
 198 00ac CB01      		movw r24,r22
 199 00ae B801      		movw r22,r16
 200 00b0 4AE0      		ldi r20,lo8(10)
 201 00b2 50E0      		ldi r21,hi8(10)
 202 00b4 0E94 0000 		call itoa
 204:isr.c         **** 		sendtekst(tempchar);
 203               		.stabn	68,0,205,.LM12-.LFBB2
 204               	.LM12:
 205 00b8 C801      		movw r24,r16
 206 00ba 0E94 0000 		call sendtekst
 205:isr.c         **** 		sendtekst(";");
 207               		.stabn	68,0,206,.LM13-.LFBB2
 208               	.LM13:
 209 00be C701      		movw r24,r14
 210 00c0 0E94 0000 		call sendtekst
 206:isr.c         **** 
 207:isr.c         **** 		itoa(count, tempchar,10); 						// 3 Mux Out 
 211               		.stabn	68,0,208,.LM14-.LFBB2
 212               	.LM14:
 213 00c4 8091 0000 		lds r24,count
 214 00c8 90E0      		ldi r25,lo8(0)
 215 00ca B801      		movw r22,r16
 216 00cc 4AE0      		ldi r20,lo8(10)
 217 00ce 50E0      		ldi r21,hi8(10)
 218 00d0 0E94 0000 		call itoa
 208:isr.c         **** 		sendtekst(tempchar);
 219               		.stabn	68,0,209,.LM15-.LFBB2
 220               	.LM15:
 221 00d4 C801      		movw r24,r16
 222 00d6 0E94 0000 		call sendtekst
 209:isr.c         **** 		sendtekst(";");
 223               		.stabn	68,0,210,.LM16-.LFBB2
 224               	.LM16:
 225 00da C701      		movw r24,r14
 226 00dc 0E94 0000 		call sendtekst
 210:isr.c         **** 
 211:isr.c         **** 		itoa(KoblingPosRef, tempchar,10);				// 4 Kobling Pos Ref
 227               		.stabn	68,0,212,.LM17-.LFBB2
 228               	.LM17:
 229 00e0 8091 0000 		lds r24,KoblingPosRef
 230 00e4 9091 0000 		lds r25,(KoblingPosRef)+1
 231 00e8 B801      		movw r22,r16
 232 00ea 4AE0      		ldi r20,lo8(10)
 233 00ec 50E0      		ldi r21,hi8(10)
 234 00ee 0E94 0000 		call itoa
 212:isr.c         **** 		sendtekst(tempchar);
 235               		.stabn	68,0,213,.LM18-.LFBB2
 236               	.LM18:
 237 00f2 C801      		movw r24,r16
 238 00f4 0E94 0000 		call sendtekst
 213:isr.c         **** 		sendtekst(";");
 239               		.stabn	68,0,214,.LM19-.LFBB2
 240               	.LM19:
 241 00f8 C701      		movw r24,r14
 242 00fa 0E94 0000 		call sendtekst
GAS LISTING /tmp/cczY6cNe.s 			page 9


 214:isr.c         **** 
 215:isr.c         **** 		itoa(KoblingPos, tempchar,10);					// 5 Kobling Pos Meas
 243               		.stabn	68,0,216,.LM20-.LFBB2
 244               	.LM20:
 245 00fe 8091 0000 		lds r24,KoblingPos
 246 0102 9091 0000 		lds r25,(KoblingPos)+1
 247 0106 B801      		movw r22,r16
 248 0108 4AE0      		ldi r20,lo8(10)
 249 010a 50E0      		ldi r21,hi8(10)
 250 010c 0E94 0000 		call itoa
 216:isr.c         **** 		sendtekst(tempchar);
 251               		.stabn	68,0,217,.LM21-.LFBB2
 252               	.LM21:
 253 0110 C801      		movw r24,r16
 254 0112 0E94 0000 		call sendtekst
 217:isr.c         **** 		sendtekst(";");
 255               		.stabn	68,0,218,.LM22-.LFBB2
 256               	.LM22:
 257 0116 C701      		movw r24,r14
 258 0118 0E94 0000 		call sendtekst
 218:isr.c         **** 
 219:isr.c         **** 		itoa(KoblingPosKP*10, tempchar,10);				// 6 Kobling Controller Kp
 259               		.stabn	68,0,220,.LM23-.LFBB2
 260               	.LM23:
 261 011c 6091 0000 		lds r22,KoblingPosKP
 262 0120 7091 0000 		lds r23,(KoblingPosKP)+1
 263 0124 8091 0000 		lds r24,(KoblingPosKP)+2
 264 0128 9091 0000 		lds r25,(KoblingPosKP)+3
 265 012c 20E0      		ldi r18,lo8(0x41200000)
 266 012e 30E0      		ldi r19,hi8(0x41200000)
 267 0130 40E2      		ldi r20,hlo8(0x41200000)
 268 0132 51E4      		ldi r21,hhi8(0x41200000)
 269 0134 0E94 0000 		call __mulsf3
 270 0138 0E94 0000 		call __fixsfsi
 271 013c DC01      		movw r26,r24
 272 013e CB01      		movw r24,r22
 273 0140 B801      		movw r22,r16
 274 0142 4AE0      		ldi r20,lo8(10)
 275 0144 50E0      		ldi r21,hi8(10)
 276 0146 0E94 0000 		call itoa
 220:isr.c         **** 		sendtekst(tempchar);
 277               		.stabn	68,0,221,.LM24-.LFBB2
 278               	.LM24:
 279 014a C801      		movw r24,r16
 280 014c 0E94 0000 		call sendtekst
 221:isr.c         **** 	
 222:isr.c         **** 		sendtekst("\n\r");
 281               		.stabn	68,0,223,.LM25-.LFBB2
 282               	.LM25:
 283 0150 80E0      		ldi r24,lo8(.LC1)
 284 0152 90E0      		ldi r25,hi8(.LC1)
 285 0154 0E94 0000 		call sendtekst
 286               	/* epilogue start */
 223:isr.c         **** }
 287               		.stabn	68,0,224,.LM26-.LFBB2
 288               	.LM26:
 289 0158 1F91      		pop r17
GAS LISTING /tmp/cczY6cNe.s 			page 10


 290 015a 0F91      		pop r16
 291 015c FF90      		pop r15
 292 015e EF90      		pop r14
 293 0160 0895      		ret
 294               		.size	debugging, .-debugging
 295               	.Lscope2:
 296               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 297               		.stabd	78,0,0
 298               		.stabs	"__vector_20:F(0,15)",36,0,59,__vector_20
 299               	.global	__vector_20
 300               		.type	__vector_20, @function
 301               	__vector_20:
 302               		.stabd	46,0,0
  59:isr.c         **** {
 303               		.stabn	68,0,59,.LM27-.LFBB3
 304               	.LM27:
 305               	.LFBB3:
 306 0162 1F92      		push __zero_reg__
 307 0164 0F92      		push r0
 308 0166 0FB6      		in r0,__SREG__
 309 0168 0F92      		push r0
 310 016a 1124      		clr __zero_reg__
 311 016c 2F93      		push r18
 312 016e 3F93      		push r19
 313 0170 4F93      		push r20
 314 0172 5F93      		push r21
 315 0174 6F93      		push r22
 316 0176 7F93      		push r23
 317 0178 8F93      		push r24
 318 017a 9F93      		push r25
 319 017c AF93      		push r26
 320 017e BF93      		push r27
 321 0180 EF93      		push r30
 322 0182 FF93      		push r31
 323               	/* prologue: Signal */
 324               	/* frame size = 0 */
  62:isr.c         **** 	data = UDR0;	// Lægger data fra seriel bufffer i variabel 
 325               		.stabn	68,0,62,.LM28-.LFBB3
 326               	.LM28:
 327 0184 8091 C600 		lds r24,198
  64:isr.c         ****     if(data == '1')
 328               		.stabn	68,0,64,.LM29-.LFBB3
 329               	.LM29:
 330 0188 8133      		cpi r24,lo8(49)
 331 018a 01F0      		breq .L35
  69:isr.c         ****     if(data == '2')
 332               		.stabn	68,0,69,.LM30-.LFBB3
 333               	.LM30:
 334 018c 8233      		cpi r24,lo8(50)
 335 018e 01F0      		breq .L36
  74:isr.c         ****     if(data == '3')
 336               		.stabn	68,0,74,.LM31-.LFBB3
 337               	.LM31:
 338 0190 8333      		cpi r24,lo8(51)
 339 0192 01F4      		brne .L12
  76:isr.c         **** 	    KoblingPosRef = 10;
 340               		.stabn	68,0,76,.LM32-.LFBB3
GAS LISTING /tmp/cczY6cNe.s 			page 11


 341               	.LM32:
 342 0194 8AE0      		ldi r24,lo8(10)
 343 0196 90E0      		ldi r25,hi8(10)
 344 0198 9093 0000 		sts (KoblingPosRef)+1,r25
 345 019c 8093 0000 		sts KoblingPosRef,r24
 346               	.L33:
 347               	/* epilogue start */
 183:isr.c         **** }
 348               		.stabn	68,0,183,.LM33-.LFBB3
 349               	.LM33:
 350 01a0 FF91      		pop r31
 351 01a2 EF91      		pop r30
 352 01a4 BF91      		pop r27
 353 01a6 AF91      		pop r26
 354 01a8 9F91      		pop r25
 355 01aa 8F91      		pop r24
 356 01ac 7F91      		pop r23
 357 01ae 6F91      		pop r22
 358 01b0 5F91      		pop r21
 359 01b2 4F91      		pop r20
 360 01b4 3F91      		pop r19
 361 01b6 2F91      		pop r18
 362 01b8 0F90      		pop r0
 363 01ba 0FBE      		out __SREG__,r0
 364 01bc 0F90      		pop r0
 365 01be 1F90      		pop __zero_reg__
 366 01c0 1895      		reti
 367               	.L36:
  71:isr.c         **** 	    KoblingPosRef = 70;
 368               		.stabn	68,0,71,.LM34-.LFBB3
 369               	.LM34:
 370 01c2 86E4      		ldi r24,lo8(70)
 371 01c4 90E0      		ldi r25,hi8(70)
 372 01c6 9093 0000 		sts (KoblingPosRef)+1,r25
 373 01ca 8093 0000 		sts KoblingPosRef,r24
 374 01ce 00C0      		rjmp .L33
 375               	.L35:
  66:isr.c         **** 	    KoblingPosRef = 130;
 376               		.stabn	68,0,66,.LM35-.LFBB3
 377               	.LM35:
 378 01d0 82E8      		ldi r24,lo8(130)
 379 01d2 90E0      		ldi r25,hi8(130)
 380 01d4 9093 0000 		sts (KoblingPosRef)+1,r25
 381 01d8 8093 0000 		sts KoblingPosRef,r24
 382 01dc 00C0      		rjmp .L33
 383               	.L12:
  79:isr.c         ****     if(data == 'u')
 384               		.stabn	68,0,79,.LM36-.LFBB3
 385               	.LM36:
 386 01de 8537      		cpi r24,lo8(117)
 387 01e0 01F4      		brne .L9
  81:isr.c         ****     KoblingPosRef = KoblingPosRef+10;
 388               		.stabn	68,0,81,.LM37-.LFBB3
 389               	.LM37:
 390 01e2 8091 0000 		lds r24,KoblingPosRef
 391 01e6 9091 0000 		lds r25,(KoblingPosRef)+1
 392 01ea 0A96      		adiw r24,10
GAS LISTING /tmp/cczY6cNe.s 			page 12


 393 01ec 9093 0000 		sts (KoblingPosRef)+1,r25
 394 01f0 8093 0000 		sts KoblingPosRef,r24
 395 01f4 00C0      		rjmp .L33
 396               	.L9:
  84:isr.c         ****     if(data == 'h')
 397               		.stabn	68,0,84,.LM38-.LFBB3
 398               	.LM38:
 399 01f6 8836      		cpi r24,lo8(104)
 400 01f8 01F4      		brne .L11
  86:isr.c         ****     KoblingPosRef = KoblingPosRef-10;
 401               		.stabn	68,0,86,.LM39-.LFBB3
 402               	.LM39:
 403 01fa 8091 0000 		lds r24,KoblingPosRef
 404 01fe 9091 0000 		lds r25,(KoblingPosRef)+1
 405 0202 0A97      		sbiw r24,10
 406 0204 9093 0000 		sts (KoblingPosRef)+1,r25
 407 0208 8093 0000 		sts KoblingPosRef,r24
 408 020c 00C0      		rjmp .L33
 409               	.L11:
  89:isr.c         ****     if(data == 'z')
 410               		.stabn	68,0,89,.LM40-.LFBB3
 411               	.LM40:
 412 020e 8A37      		cpi r24,lo8(122)
 413 0210 01F4      		brne .L13
  91:isr.c         ****     pressRef++;
 414               		.stabn	68,0,91,.LM41-.LFBB3
 415               	.LM41:
 416 0212 8091 0000 		lds r24,pressRef
 417 0216 9091 0000 		lds r25,(pressRef)+1
 418 021a 0196      		adiw r24,1
 419 021c 9093 0000 		sts (pressRef)+1,r25
 420 0220 8093 0000 		sts pressRef,r24
 421 0224 00C0      		rjmp .L33
 422               	.L13:
  94:isr.c         ****     if(data == 'x')
 423               		.stabn	68,0,94,.LM42-.LFBB3
 424               	.LM42:
 425 0226 8837      		cpi r24,lo8(120)
 426 0228 01F4      		brne .L14
  96:isr.c         ****     pressRef--;
 427               		.stabn	68,0,96,.LM43-.LFBB3
 428               	.LM43:
 429 022a 8091 0000 		lds r24,pressRef
 430 022e 9091 0000 		lds r25,(pressRef)+1
 431 0232 0197      		sbiw r24,1
 432 0234 9093 0000 		sts (pressRef)+1,r25
 433 0238 8093 0000 		sts pressRef,r24
 434 023c 00C0      		rjmp .L33
 435               	.L14:
  99:isr.c         ****     if(data == '<')
 436               		.stabn	68,0,99,.LM44-.LFBB3
 437               	.LM44:
 438 023e 8C33      		cpi r24,lo8(60)
 439 0240 01F4      		brne .L15
 101:isr.c         ****     pressRef = 110;
 440               		.stabn	68,0,101,.LM45-.LFBB3
 441               	.LM45:
GAS LISTING /tmp/cczY6cNe.s 			page 13


 442 0242 8EE6      		ldi r24,lo8(110)
 443 0244 90E0      		ldi r25,hi8(110)
 444 0246 9093 0000 		sts (pressRef)+1,r25
 445 024a 8093 0000 		sts pressRef,r24
 446 024e 00C0      		rjmp .L33
 447               	.L15:
 104:isr.c         ****     if(data == 'c')
 448               		.stabn	68,0,104,.LM46-.LFBB3
 449               	.LM46:
 450 0250 8336      		cpi r24,lo8(99)
 451 0252 01F4      		brne .L16
 106:isr.c         ****     pressRef = 0;
 452               		.stabn	68,0,106,.LM47-.LFBB3
 453               	.LM47:
 454 0254 1092 0000 		sts (pressRef)+1,__zero_reg__
 455 0258 1092 0000 		sts pressRef,__zero_reg__
 456 025c 00C0      		rjmp .L33
 457               	.L16:
 109:isr.c         ****     if(data == 'p')
 458               		.stabn	68,0,109,.LM48-.LFBB3
 459               	.LM48:
 460 025e 8037      		cpi r24,lo8(112)
 461 0260 01F4      		brne .L17
 111:isr.c         ****     KoblingPosKP = KoblingPosKP + 0.1;
 462               		.stabn	68,0,111,.LM49-.LFBB3
 463               	.LM49:
 464 0262 6091 0000 		lds r22,KoblingPosKP
 465 0266 7091 0000 		lds r23,(KoblingPosKP)+1
 466 026a 8091 0000 		lds r24,(KoblingPosKP)+2
 467 026e 9091 0000 		lds r25,(KoblingPosKP)+3
 468 0272 2DEC      		ldi r18,lo8(0x3dcccccd)
 469 0274 3CEC      		ldi r19,hi8(0x3dcccccd)
 470 0276 4CEC      		ldi r20,hlo8(0x3dcccccd)
 471 0278 5DE3      		ldi r21,hhi8(0x3dcccccd)
 472 027a 0E94 0000 		call __addsf3
 473 027e 6093 0000 		sts KoblingPosKP,r22
 474 0282 7093 0000 		sts (KoblingPosKP)+1,r23
 475 0286 8093 0000 		sts (KoblingPosKP)+2,r24
 476 028a 9093 0000 		sts (KoblingPosKP)+3,r25
 477 028e 00C0      		rjmp .L33
 478               	.L17:
 114:isr.c         ****     if(data == 'l')
 479               		.stabn	68,0,114,.LM50-.LFBB3
 480               	.LM50:
 481 0290 8C36      		cpi r24,lo8(108)
 482 0292 01F4      		brne .L18
 116:isr.c         ****     KoblingPosKP = KoblingPosKP - 0.1;
 483               		.stabn	68,0,116,.LM51-.LFBB3
 484               	.LM51:
 485 0294 6091 0000 		lds r22,KoblingPosKP
 486 0298 7091 0000 		lds r23,(KoblingPosKP)+1
 487 029c 8091 0000 		lds r24,(KoblingPosKP)+2
 488 02a0 9091 0000 		lds r25,(KoblingPosKP)+3
 489 02a4 2DEC      		ldi r18,lo8(0x3dcccccd)
 490 02a6 3CEC      		ldi r19,hi8(0x3dcccccd)
 491 02a8 4CEC      		ldi r20,hlo8(0x3dcccccd)
 492 02aa 5DE3      		ldi r21,hhi8(0x3dcccccd)
GAS LISTING /tmp/cczY6cNe.s 			page 14


 493 02ac 0E94 0000 		call __subsf3
 494 02b0 6093 0000 		sts KoblingPosKP,r22
 495 02b4 7093 0000 		sts (KoblingPosKP)+1,r23
 496 02b8 8093 0000 		sts (KoblingPosKP)+2,r24
 497 02bc 9093 0000 		sts (KoblingPosKP)+3,r25
 498 02c0 00C0      		rjmp .L33
 499               	.L18:
 119:isr.c         **** 	if(data == 'a')
 500               		.stabn	68,0,119,.LM52-.LFBB3
 501               	.LM52:
 502 02c2 8136      		cpi r24,lo8(97)
 503 02c4 01F4      		brne .L19
 121:isr.c         ****         count = 0;
 504               		.stabn	68,0,121,.LM53-.LFBB3
 505               	.LM53:
 506 02c6 1092 0000 		sts count,__zero_reg__
 122:isr.c         ****         retning = 0;
 507               		.stabn	68,0,122,.LM54-.LFBB3
 508               	.LM54:
 509 02ca 1092 0000 		sts retning,__zero_reg__
 123:isr.c         ****         PWM_duty_cycle_A_set(0);
 510               		.stabn	68,0,123,.LM55-.LFBB3
 511               	.LM55:
 512 02ce 80E0      		ldi r24,lo8(0)
 513 02d0 90E0      		ldi r25,hi8(0)
 514 02d2 0E94 0000 		call PWM_duty_cycle_A_set
 124:isr.c         **** 	    PWM_duty_cycle_B_set(0);
 515               		.stabn	68,0,124,.LM56-.LFBB3
 516               	.LM56:
 517 02d6 80E0      		ldi r24,lo8(0)
 518 02d8 90E0      		ldi r25,hi8(0)
 519 02da 0E94 0000 		call PWM_duty_cycle_B_set
 520 02de 00C0      		rjmp .L33
 521               	.L19:
 127:isr.c         ****     if(data == 'd')
 522               		.stabn	68,0,127,.LM57-.LFBB3
 523               	.LM57:
 524 02e0 8436      		cpi r24,lo8(100)
 525 02e2 01F4      		brne .L20
 129:isr.c         ****         count = 0;
 526               		.stabn	68,0,129,.LM58-.LFBB3
 527               	.LM58:
 528 02e4 1092 0000 		sts count,__zero_reg__
 130:isr.c         ****         retning = 1;
 529               		.stabn	68,0,130,.LM59-.LFBB3
 530               	.LM59:
 531 02e8 81E0      		ldi r24,lo8(1)
 532 02ea 8093 0000 		sts retning,r24
 131:isr.c         ****         PWM_duty_cycle_A_set(0);
 533               		.stabn	68,0,131,.LM60-.LFBB3
 534               	.LM60:
 535 02ee 80E0      		ldi r24,lo8(0)
 536 02f0 90E0      		ldi r25,hi8(0)
 537 02f2 0E94 0000 		call PWM_duty_cycle_A_set
 132:isr.c         **** 	    PWM_duty_cycle_B_set(0);
 538               		.stabn	68,0,132,.LM61-.LFBB3
 539               	.LM61:
GAS LISTING /tmp/cczY6cNe.s 			page 15


 540 02f6 80E0      		ldi r24,lo8(0)
 541 02f8 90E0      		ldi r25,hi8(0)
 542 02fa 0E94 0000 		call PWM_duty_cycle_B_set
 543 02fe 00C0      		rjmp .L33
 544               	.L20:
 135:isr.c         **** 	if(data == 'w')
 545               		.stabn	68,0,135,.LM62-.LFBB3
 546               	.LM62:
 547 0300 8737      		cpi r24,lo8(119)
 548 0302 01F4      		brne .L21
 137:isr.c         ****         if(count>=254)
 549               		.stabn	68,0,137,.LM63-.LFBB3
 550               	.LM63:
 551 0304 8091 0000 		lds r24,count
 552 0308 8E3F      		cpi r24,lo8(-2)
 553 030a 00F0      		brlo .L24
 554 030c 8EEF      		ldi r24,lo8(-2)
 555               	.L24:
 140:isr.c         ****         count++;
 556               		.stabn	68,0,140,.LM64-.LFBB3
 557               	.LM64:
 558 030e 982F      		mov r25,r24
 559 0310 9F5F      		subi r25,lo8(-(1))
 560 0312 9093 0000 		sts count,r25
 142:isr.c         ****         if(retning)
 561               		.stabn	68,0,142,.LM65-.LFBB3
 562               	.LM65:
 563 0316 8091 0000 		lds r24,retning
 564 031a 8823      		tst r24
 565 031c 01F0      		breq .L27
 566               	.L34:
 155:isr.c         **** 		    PWM_duty_cycle_A_set(count);
 567               		.stabn	68,0,155,.LM66-.LFBB3
 568               	.LM66:
 569 031e 892F      		mov r24,r25
 570 0320 90E0      		ldi r25,lo8(0)
 571 0322 0E94 0000 		call PWM_duty_cycle_A_set
 572 0326 00C0      		rjmp .L33
 573               	.L21:
 147:isr.c         **** 	if(data == 's')
 574               		.stabn	68,0,147,.LM67-.LFBB3
 575               	.LM67:
 576 0328 8337      		cpi r24,lo8(115)
 577 032a 01F0      		breq .L37
 159:isr.c         **** 	if(data == 'q')
 578               		.stabn	68,0,159,.LM68-.LFBB3
 579               	.LM68:
 580 032c 8137      		cpi r24,lo8(113)
 581 032e 01F0      		breq .L38
 171:isr.c         **** 	if(data == 'e')
 582               		.stabn	68,0,171,.LM69-.LFBB3
 583               	.LM69:
 584 0330 8536      		cpi r24,lo8(101)
 585 0332 01F0      		breq .+2
 586 0334 00C0      		rjmp .L33
 176:isr.c         ****         count = 0;
 587               		.stabn	68,0,176,.LM70-.LFBB3
GAS LISTING /tmp/cczY6cNe.s 			page 16


 588               	.LM70:
 589 0336 1092 0000 		sts count,__zero_reg__
 178:isr.c         ****         if(retning)
 590               		.stabn	68,0,178,.LM71-.LFBB3
 591               	.LM71:
 592 033a 8091 0000 		lds r24,retning
 593 033e 8823      		tst r24
 594 0340 01F4      		brne .L39
 181:isr.c         ****             PWM_duty_cycle_B_set(count);
 595               		.stabn	68,0,181,.LM72-.LFBB3
 596               	.LM72:
 597 0342 80E0      		ldi r24,lo8(0)
 598 0344 90E0      		ldi r25,hi8(0)
 599 0346 0E94 0000 		call PWM_duty_cycle_B_set
 600 034a 00C0      		rjmp .L33
 601               	.L37:
 149:isr.c         ****         if(count<=1)
 602               		.stabn	68,0,149,.LM73-.LFBB3
 603               	.LM73:
 604 034c 8091 0000 		lds r24,count
 605 0350 8230      		cpi r24,lo8(2)
 606 0352 00F0      		brlo .L40
 607               	.L26:
 152:isr.c         ****         count--;
 608               		.stabn	68,0,152,.LM74-.LFBB3
 609               	.LM74:
 610 0354 982F      		mov r25,r24
 611 0356 9150      		subi r25,lo8(-(-1))
 612 0358 9093 0000 		sts count,r25
 154:isr.c         ****         if(retning)        
 613               		.stabn	68,0,154,.LM75-.LFBB3
 614               	.LM75:
 615 035c 8091 0000 		lds r24,retning
 616 0360 8823      		tst r24
 617 0362 01F4      		brne .L34
 618               	.L27:
 157:isr.c         ****             PWM_duty_cycle_B_set(count);
 619               		.stabn	68,0,157,.LM76-.LFBB3
 620               	.LM76:
 621 0364 892F      		mov r24,r25
 622 0366 90E0      		ldi r25,lo8(0)
 623 0368 0E94 0000 		call PWM_duty_cycle_B_set
 624 036c 00C0      		rjmp .L33
 625               	.L38:
 164:isr.c         ****         count = 255;
 626               		.stabn	68,0,164,.LM77-.LFBB3
 627               	.LM77:
 628 036e 8FEF      		ldi r24,lo8(-1)
 629 0370 8093 0000 		sts count,r24
 166:isr.c         ****         if(retning)
 630               		.stabn	68,0,166,.LM78-.LFBB3
 631               	.LM78:
 632 0374 8091 0000 		lds r24,retning
 633 0378 8823      		tst r24
 634 037a 01F0      		breq .L29
 167:isr.c         **** 		    PWM_duty_cycle_A_set(count);
 635               		.stabn	68,0,167,.LM79-.LFBB3
GAS LISTING /tmp/cczY6cNe.s 			page 17


 636               	.LM79:
 637 037c 8FEF      		ldi r24,lo8(255)
 638 037e 90E0      		ldi r25,hi8(255)
 639 0380 0E94 0000 		call PWM_duty_cycle_A_set
 640 0384 00C0      		rjmp .L33
 641               	.L39:
 179:isr.c         **** 		    PWM_duty_cycle_A_set(count);
 642               		.stabn	68,0,179,.LM80-.LFBB3
 643               	.LM80:
 644 0386 80E0      		ldi r24,lo8(0)
 645 0388 90E0      		ldi r25,hi8(0)
 646 038a 0E94 0000 		call PWM_duty_cycle_A_set
 647 038e 00C0      		rjmp .L33
 648               	.L29:
 169:isr.c         ****             PWM_duty_cycle_B_set(count);
 649               		.stabn	68,0,169,.LM81-.LFBB3
 650               	.LM81:
 651 0390 8FEF      		ldi r24,lo8(255)
 652 0392 90E0      		ldi r25,hi8(255)
 653 0394 0E94 0000 		call PWM_duty_cycle_B_set
 654 0398 00C0      		rjmp .L33
 655               	.L40:
 656 039a 81E0      		ldi r24,lo8(1)
 657 039c 00C0      		rjmp .L26
 658               		.size	__vector_20, .-__vector_20
 659               		.stabs	"data:r(0,2)",64,0,60,24
 660               		.stabn	192,0,0,.LFBB3-.LFBB3
 661               		.stabn	224,0,0,.Lscope3-.LFBB3
 662               	.Lscope3:
 663               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 664               		.stabd	78,0,0
 665               		.stabs	"__vector_24:F(0,15)",36,0,23,__vector_24
 666               	.global	__vector_24
 667               		.type	__vector_24, @function
 668               	__vector_24:
 669               		.stabd	46,0,0
  23:isr.c         **** {
 670               		.stabn	68,0,23,.LM82-.LFBB4
 671               	.LM82:
 672               	.LFBB4:
 673 039e 1F92      		push __zero_reg__
 674 03a0 0F92      		push r0
 675 03a2 0FB6      		in r0,__SREG__
 676 03a4 0F92      		push r0
 677 03a6 1124      		clr __zero_reg__
 678 03a8 2F93      		push r18
 679 03aa 3F93      		push r19
 680 03ac 4F93      		push r20
 681 03ae 5F93      		push r21
 682 03b0 6F93      		push r22
 683 03b2 7F93      		push r23
 684 03b4 8F93      		push r24
 685 03b6 9F93      		push r25
 686 03b8 AF93      		push r26
 687 03ba BF93      		push r27
 688 03bc EF93      		push r30
 689 03be FF93      		push r31
GAS LISTING /tmp/cczY6cNe.s 			page 18


 690               	/* prologue: Signal */
 691               	/* frame size = 0 */
  29:isr.c         **** 	channel = ADMUX & 0x07;
 692               		.stabn	68,0,29,.LM83-.LFBB4
 693               	.LM83:
 694 03c0 3091 7C00 		lds r19,124
 695 03c4 3770      		andi r19,lo8(7)
  32:isr.c         ****     adlow=ADCL;
 696               		.stabn	68,0,32,.LM84-.LFBB4
 697               	.LM84:
 698 03c6 8091 7800 		lds r24,120
  33:isr.c         ****     adhigh=ADCH;
 699               		.stabn	68,0,33,.LM85-.LFBB4
 700               	.LM85:
 701 03ca 2091 7900 		lds r18,121
  34:isr.c         **** 	ADCconv = (unsigned int)((adhigh<<8)|(adlow & 0xFF));	
 702               		.stabn	68,0,34,.LM86-.LFBB4
 703               	.LM86:
 704 03ce 482F      		mov r20,r24
 705 03d0 50E0      		ldi r21,lo8(0)
 706 03d2 922F      		mov r25,r18
 707 03d4 80E0      		ldi r24,lo8(0)
 708 03d6 482B      		or r20,r24
 709 03d8 592B      		or r21,r25
 710 03da 5093 0000 		sts (ADCconv)+1,r21
 711 03de 4093 0000 		sts ADCconv,r20
  37:isr.c         **** 	if(channel == 0)
 712               		.stabn	68,0,37,.LM87-.LFBB4
 713               	.LM87:
 714 03e2 3323      		tst r19
 715 03e4 01F0      		breq .L45
  44:isr.c         **** 	if(channel == 1)
 716               		.stabn	68,0,44,.LM88-.LFBB4
 717               	.LM88:
 718 03e6 3130      		cpi r19,lo8(1)
 719 03e8 01F0      		breq .L46
 720               	.L44:
 721               	/* epilogue start */
  55:isr.c         **** }
 722               		.stabn	68,0,55,.LM89-.LFBB4
 723               	.LM89:
 724 03ea FF91      		pop r31
 725 03ec EF91      		pop r30
 726 03ee BF91      		pop r27
 727 03f0 AF91      		pop r26
 728 03f2 9F91      		pop r25
 729 03f4 8F91      		pop r24
 730 03f6 7F91      		pop r23
 731 03f8 6F91      		pop r22
 732 03fa 5F91      		pop r21
 733 03fc 4F91      		pop r20
 734 03fe 3F91      		pop r19
 735 0400 2F91      		pop r18
 736 0402 0F90      		pop r0
 737 0404 0FBE      		out __SREG__,r0
 738 0406 0F90      		pop r0
 739 0408 1F90      		pop __zero_reg__
GAS LISTING /tmp/cczY6cNe.s 			page 19


 740 040a 1895      		reti
 741               	.L45:
  40:isr.c         **** 		presscontroller(ADCconv);	
 742               		.stabn	68,0,40,.LM90-.LFBB4
 743               	.LM90:
 744 040c CA01      		movw r24,r20
 745 040e 0E94 0000 		call presscontroller
 746 0412 00C0      		rjmp .L44
 747               	.L46:
  47:isr.c         **** 		KoblingPosController(ADCconv);
 748               		.stabn	68,0,47,.LM91-.LFBB4
 749               	.LM91:
 750 0414 CA01      		movw r24,r20
 751 0416 0E94 0000 		call KoblingPosController
  48:isr.c         **** 		debugging();
 752               		.stabn	68,0,48,.LM92-.LFBB4
 753               	.LM92:
 754 041a 0E94 0000 		call debugging
 755 041e 00C0      		rjmp .L44
 756               		.size	__vector_24, .-__vector_24
 757               		.stabs	"channel:r(0,2)",64,0,26,19
 758               		.stabn	192,0,0,.LFBB4-.LFBB4
 759               		.stabn	224,0,0,.Lscope4-.LFBB4
 760               	.Lscope4:
 761               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 762               		.stabd	78,0,0
 763               	.global	ADCconv
 764               	.global	ADCconv
 765               		.section .bss
 766               		.type	ADCconv, @object
 767               		.size	ADCconv, 2
 768               	ADCconv:
 769 0000 0000      		.skip 2,0
 770               	.global	setChannel
 771               	.global	setChannel
 772               		.type	setChannel, @object
 773               		.size	setChannel, 1
 774               	setChannel:
 775 0002 00        		.skip 1,0
 776               	.global	count
 777               	.global	count
 778               		.type	count, @object
 779               		.size	count, 1
 780               	count:
 781 0003 00        		.skip 1,0
 782               	.global	retning
 783               	.global	retning
 784               		.type	retning, @object
 785               		.size	retning, 1
 786               	retning:
 787 0004 00        		.skip 1,0
 788               		.comm tempchar,5,1
 789               		.stabs	"ADCconv:G(0,4)",32,0,13,0
 790               		.stabs	"setChannel:G(0,2)",32,0,14,0
 791               		.stabs	"count:G(0,2)",32,0,17,0
 792               		.stabs	"retning:G(0,2)",32,0,18,0
 793               		.stabs	"tempchar:G(0,16)=ar(0,17)=r(0,17);0;0177777;;0;4;(0,2)",32,0,19,0
GAS LISTING /tmp/cczY6cNe.s 			page 20


 794               		.text
 795               		.stabs	"",100,0,0,.Letext0
 796               	.Letext0:
GAS LISTING /tmp/cczY6cNe.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 isr.c
     /tmp/cczY6cNe.s:2      *ABS*:000000000000003f __SREG__
     /tmp/cczY6cNe.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/cczY6cNe.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/cczY6cNe.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/cczY6cNe.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cczY6cNe.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cczY6cNe.s:83     .text:0000000000000000 __vector_18
     /tmp/cczY6cNe.s:774    .bss:0000000000000002 setChannel
     /tmp/cczY6cNe.s:146    .text:000000000000004c debugging
                            *COM*:0000000000000005 tempchar
     /tmp/cczY6cNe.s:768    .bss:0000000000000000 ADCconv
     /tmp/cczY6cNe.s:780    .bss:0000000000000003 count
     /tmp/cczY6cNe.s:301    .text:0000000000000162 __vector_20
     /tmp/cczY6cNe.s:786    .bss:0000000000000004 retning
     /tmp/cczY6cNe.s:668    .text:000000000000039e __vector_24

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
pressRef
itoa
sendtekst
__floatunsisf
__mulsf3
__subsf3
__fixsfsi
KoblingPosRef
KoblingPos
KoblingPosKP
__addsf3
PWM_duty_cycle_A_set
PWM_duty_cycle_B_set
presscontroller
KoblingPosController
