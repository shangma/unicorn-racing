Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_mulsi3.o)
                              sensor_drv.o (__mulsi3)
/usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodhi4.o)
                              sensor_drv.o (__udivmodhi4)
/usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodsi4.o)
                              sensor_drv.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o (exit)
/usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_clear_bss.o)
                              main_can_sensor_node_example.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

rtc_minutes         0x1               rtc_drv.o
sensor_message      0xd               main_can_sensor_node_example.o
rtc_days            0x1               rtc_drv.o
sensor_buffer       0x9               main_can_sensor_node_example.o
rtc_milliseconds    0x2               rtc_drv.o
rtc_tics            0x4               rtc_drv.o
rtc_hours           0x1               rtc_drv.o
rtc_seconds         0x1               rtc_drv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
LOAD main_can_sensor_node_example.o
LOAD adc_drv.o
LOAD can_drv.o
LOAD can_lib.o
LOAD sensor_drv.o
LOAD rtc_drv.o
LOAD /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1696
 *(.vectors)
 .vectors       0x00000000       0x94 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000094                . = ALIGN (0x2)
                0x00000094                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000094        0x0 linker stubs
 *(.trampolines*)
                0x00000094                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000094                __ctors_start = .
 *(.ctors)
                0x00000094                __ctors_end = .
                0x00000094                __dtors_start = .
 *(.dtors)
                0x00000094                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000094        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
                0x00000094                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000094        0xc /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000a0       0x1a /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
                0x000000a0                __do_copy_data
 .init4         0x000000ba       0x10 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_clear_bss.o)
                0x000000ba                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ca        0x8 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x000000d2        0x4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
                0x000000d2                __vector_22
                0x000000d2                __vector_28
                0x000000d2                __vector_1
                0x000000d2                __vector_32
                0x000000d2                __vector_34
                0x000000d2                __vector_24
                0x000000d2                __vector_12
                0x000000d2                __bad_interrupt
                0x000000d2                __vector_6
                0x000000d2                __vector_31
                0x000000d2                __vector_35
                0x000000d2                __vector_3
                0x000000d2                __vector_23
                0x000000d2                __vector_30
                0x000000d2                __vector_25
                0x000000d2                __vector_11
                0x000000d2                __vector_13
                0x000000d2                __vector_17
                0x000000d2                __vector_19
                0x000000d2                __vector_7
                0x000000d2                __vector_27
                0x000000d2                __vector_5
                0x000000d2                __vector_33
                0x000000d2                __vector_4
                0x000000d2                __vector_2
                0x000000d2                __vector_21
                0x000000d2                __vector_15
                0x000000d2                __vector_36
                0x000000d2                __vector_29
                0x000000d2                __vector_8
                0x000000d2                __vector_26
                0x000000d2                __vector_14
                0x000000d2                __vector_10
                0x000000d2                __vector_16
                0x000000d2                __vector_20
 .text          0x000000d6      0x17e main_can_sensor_node_example.o
                0x00000132                send_data_CAN
                0x000000d6                convertanalog
                0x0000020c                main
                0x00000114                __vector_18
 .text          0x00000254      0x16e adc_drv.o
                0x00000254                adc_init
                0x000002f8                adc_single_conversion
 .text          0x000003c2      0x39c can_drv.o
                0x000003e2                can_get_mob_free
                0x00000410                can_get_mob_status
                0x00000436                can_get_data
                0x000003c2                can_clear_all_mob
                0x0000045e                can_auto_baudrate
                0x00000742                can_fixed_baudrate
 .text          0x0000075e      0xba2 can_lib.o
                0x000012e6                can_init
                0x0000075e                can_get_status
                0x00000884                can_cmd
 .text          0x00001300      0x10c sensor_drv.o
                0x0000138e                get_temperature
                0x00001334                get_luminosity
                0x00001300                get_vin
 .text          0x0000140c      0x1dc rtc_drv.o
                0x00001484                rtc_int_init
                0x0000140c                wait_for
                0x00001526                __vector_9
 .text          0x000015e8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_mulsi3.o)
 .text          0x000015e8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x000015e8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x000015e8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_exit.o)
 .text          0x000015e8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_clear_bss.o)
                0x000015e8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000015e8       0x3e /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_mulsi3.o)
                0x000015e8                __mulsi3
 .text.libgcc   0x00001626       0x28 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodhi4.o)
                0x00001626                __udivmodhi4
 .text.libgcc   0x0000164e       0x44 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodsi4.o)
                0x0000164e                __udivmodsi4
 .text.libgcc   0x00001692        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00001692        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_clear_bss.o)
                0x00001692                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001692        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_exit.o)
                0x00001692                exit
                0x00001692                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001692        0x4 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00001696                _etext = .

.data           0x00800100       0xf8 load address 0x00001696
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
 .data          0x00800100        0x0 main_can_sensor_node_example.o
 .data          0x00800100        0x0 adc_drv.o
 .data          0x00800100        0x0 can_drv.o
 .data          0x00800100        0x0 can_lib.o
 .data          0x00800100       0xf8 sensor_drv.o
                0x00800100                thermistor_table
                0x00800198                luminosity_table
 .data          0x008001f8        0x0 rtc_drv.o
 .data          0x008001f8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_mulsi3.o)
 .data          0x008001f8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x008001f8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x008001f8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_exit.o)
 .data          0x008001f8        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008001f8                . = ALIGN (0x2)
                0x008001f8                _edata = .
                0x008001f8                PROVIDE (__data_end, .)

.bss            0x008001f8       0x22 load address 0x0000178e
                0x008001f8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008001f8        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o
 .bss           0x008001f8        0x1 main_can_sensor_node_example.o
                0x008001f8                dummy_counter
 .bss           0x008001f9        0x0 adc_drv.o
 .bss           0x008001f9        0x0 can_drv.o
 .bss           0x008001f9        0x0 can_lib.o
 .bss           0x008001f9        0x0 sensor_drv.o
 .bss           0x008001f9        0x1 rtc_drv.o
                0x008001f9                rtc_running
 .bss           0x008001fa        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_mulsi3.o)
 .bss           0x008001fa        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x008001fa        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x008001fa        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_exit.o)
 .bss           0x008001fa        0x0 /usr/lib/gcc/avr/4.3.3/avr51/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001fa       0x16 main_can_sensor_node_example.o
                0x008001fa                sensor_message
                0x00800207                sensor_buffer
 COMMON         0x00800210        0xa rtc_drv.o
                0x00800210                rtc_minutes
                0x00800211                rtc_days
                0x00800212                rtc_milliseconds
                0x00800214                rtc_tics
                0x00800218                rtc_hours
                0x00800219                rtc_seconds
                0x0080021a                PROVIDE (__bss_end, .)
                0x00001696                __data_load_start = LOADADDR (.data)
                0x0000178e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080021a        0x0
                0x0080021a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080021a                PROVIDE (__noinit_end, .)
                0x0080021a                _end = .
                0x0080021a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x750
 *(.stab)
 .stab          0x00000000      0x750 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr51/crtcan128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main_can_sensor_node_example.o
 .debug_aranges
                0x00000020       0x20 adc_drv.o
 .debug_aranges
                0x00000040       0x20 can_drv.o
 .debug_aranges
                0x00000060       0x20 can_lib.o
 .debug_aranges
                0x00000080       0x20 sensor_drv.o
 .debug_aranges
                0x000000a0       0x20 rtc_drv.o

.debug_pubnames
                0x00000000      0x2aa
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x86 main_can_sensor_node_example.o
 .debug_pubnames
                0x00000086       0x39 adc_drv.o
 .debug_pubnames
                0x000000bf       0x92 can_drv.o
 .debug_pubnames
                0x00000151       0x3e can_lib.o
 .debug_pubnames
                0x0000018f       0x6f sensor_drv.o
 .debug_pubnames
                0x000001fe       0xac rtc_drv.o

.debug_info     0x00000000      0xddd
 *(.debug_info)
 .debug_info    0x00000000      0x2f4 main_can_sensor_node_example.o
 .debug_info    0x000002f4      0x151 adc_drv.o
 .debug_info    0x00000445      0x325 can_drv.o
 .debug_info    0x0000076a      0x2e1 can_lib.o
 .debug_info    0x00000a4b      0x1da sensor_drv.o
 .debug_info    0x00000c25      0x1b8 rtc_drv.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x610
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x180 main_can_sensor_node_example.o
 .debug_abbrev  0x00000180       0xc8 adc_drv.o
 .debug_abbrev  0x00000248      0x101 can_drv.o
 .debug_abbrev  0x00000349      0x13f can_lib.o
 .debug_abbrev  0x00000488       0xcc sensor_drv.o
 .debug_abbrev  0x00000554       0xbc rtc_drv.o

.debug_line     0x00000000      0xd68
 *(.debug_line)
 .debug_line    0x00000000      0x23d main_can_sensor_node_example.o
 .debug_line    0x0000023d      0x162 adc_drv.o
 .debug_line    0x0000039f      0x316 can_drv.o
 .debug_line    0x000006b5      0x3b9 can_lib.o
 .debug_line    0x00000a6e      0x122 sensor_drv.o
 .debug_line    0x00000b90      0x1d8 rtc_drv.o

.debug_frame    0x00000000      0x1b0
 *(.debug_frame)
 .debug_frame   0x00000000       0x50 main_can_sensor_node_example.o
 .debug_frame   0x00000050       0x30 adc_drv.o
 .debug_frame   0x00000080       0x70 can_drv.o
 .debug_frame   0x000000f0       0x40 can_lib.o
 .debug_frame   0x00000130       0x40 sensor_drv.o
 .debug_frame   0x00000170       0x40 rtc_drv.o

.debug_str      0x00000000      0x59d
 *(.debug_str)
 .debug_str     0x00000000      0x1ff main_can_sensor_node_example.o
                                0x249 (size before relaxing)
 .debug_str     0x000001ff       0x7b adc_drv.o
                                0x173 (size before relaxing)
 .debug_str     0x0000027a      0x18c can_drv.o
                                0x267 (size before relaxing)
 .debug_str     0x00000406       0x53 can_lib.o
                                0x21a (size before relaxing)
 .debug_str     0x00000459       0xbb sensor_drv.o
                                0x18b (size before relaxing)
 .debug_str     0x00000514       0x89 rtc_drv.o
                                0x163 (size before relaxing)

.debug_loc      0x00000000      0x854
 *(.debug_loc)
 .debug_loc     0x00000000       0x18 main_can_sensor_node_example.o
 .debug_loc     0x00000018       0xc0 adc_drv.o
 .debug_loc     0x000000d8      0x3f7 can_drv.o
 .debug_loc     0x000004cf      0x315 can_lib.o
 .debug_loc     0x000007e4       0x48 sensor_drv.o
 .debug_loc     0x0000082c       0x28 rtc_drv.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(can_sensor_node_example_gcc.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x30
 .debug_ranges  0x00000000       0x30 main_can_sensor_node_example.o
